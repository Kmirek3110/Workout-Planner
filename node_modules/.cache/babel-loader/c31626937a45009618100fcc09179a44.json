{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport APIService from '../APIService';\nimport React, { useState, useEffect } from 'react';\nimport ExerciseForm from './ExerciseForm';\nimport { useCookies } from 'react-cookie';\nimport WorkoutForm from './WorkoutForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkoutList(props) {\n  _s();\n\n  const [exercise, SetExercise] = useState({\n    exercise_name: \"\",\n    reps: \"\",\n    sets: \"\"\n  });\n  const [token] = useCookies(['mytoken']);\n  const [workoutAdd, setWorkoutAdd] = useState(\"\");\n  const [exerciseEdit] = useState({\n    workout: \"\",\n    exercise: \"\"\n  });\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n\n  const ExrAddForm = workout => {\n    setShowAddForm(!showAddForm);\n    setWorkoutAdd(workout.title);\n  };\n\n  const ExrEditForm = (workout, exercise) => {\n    setShowEditForm(!showEditForm);\n    exerciseEdit.workout = workout.title;\n    exerciseEdit.exercise = exercise.exercise_name;\n  };\n\n  const UpdateExercise = (workout, name) => {\n    exercise.exercise_name = name;\n    APIService.UpdateExercise(workout.id, exercise, token['mytoken']).catch(error => console.log(error));\n  };\n\n  const deleteBtn = workout => {\n    APIService.DeleteWorkout(workout.id).then(window.location.reload()).catch(error => console.log(error));\n  };\n\n  const deleteExcr = (workout, exercise) => {\n    console.log(\"TEST\", exercise);\n    APIService.DeleteExercise(workout.id, exercise, token['mytoken']).then(window.location.reload()).catch(error => console.log(error));\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    SetExercise(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WorkoutList\",\n    children: props.workouts && props.workouts.map(workout => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"WorkoutElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: workout.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), workout.exercises.map(exercise => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: exercise.exercise_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Reps:\", exercise.reps]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Sets:\", exercise.sets]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: () => ExrEditForm(workout, exercise),\n                children: \" Edit Exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => deleteExcr(workout, exercise),\n                children: \" Delete exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this), showEditForm && exercise.exercise_name == exerciseEdit.exercise && workout.title == exerciseEdit.workout && /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: () => UpdateExercise(workout, exercise.exercise_name),\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Reps:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"reps\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Sets:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"sets\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Change\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this)\n          }, exercise.exercise_name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this);\n        }), showAddForm && workout.title == workoutAdd && /*#__PURE__*/_jsxDEV(ExerciseForm, {\n          workout: workout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => ExrAddForm(workout),\n              children: \"Add new exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteBtn(workout),\n              children: \" Delete workout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this)]\n      }, workout.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkoutList, \"vxmQtP4HXgj/rc8LnittUOws26g=\", false, function () {\n  return [useCookies];\n});\n\n_c = WorkoutList;\nWorkoutList.propTypes = {// workouts: []\n};\nexport default WorkoutList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutList\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js"],"names":["PropTypes","APIService","React","useState","useEffect","ExerciseForm","useCookies","WorkoutForm","WorkoutList","props","exercise","SetExercise","exercise_name","reps","sets","token","workoutAdd","setWorkoutAdd","exerciseEdit","workout","showAddForm","setShowAddForm","showEditForm","setShowEditForm","ExrAddForm","title","ExrEditForm","UpdateExercise","name","id","catch","error","console","log","deleteBtn","DeleteWorkout","then","window","location","reload","deleteExcr","DeleteExercise","handleChange","e","value","target","prevState","workouts","map","exercises","propTypes"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AAACS,IAAAA,aAAa,EAAC,EAAf;AAAmBC,IAAAA,IAAI,EAAC,EAAxB;AAA4BC,IAAAA,IAAI,EAAC;AAAjC,GAAD,CAAxC;AACA,QAAM,CAACC,KAAD,IAAUT,UAAU,CAAC,CAAC,SAAD,CAAD,CAA1B;AACA,QAAM,CAACU,UAAD,EAAYC,aAAZ,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,YAAD,IAAiBf,QAAQ,CAAC;AAACgB,IAAAA,OAAO,EAAC,EAAT;AAAYT,IAAAA,QAAQ,EAAC;AAArB,GAAD,CAA/B;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMqB,UAAU,GAAIL,OAAD,IAAa;AAC5BE,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACAH,IAAAA,aAAa,CAACE,OAAO,CAACM,KAAT,CAAb;AACH,GAHD;;AAMA,QAAMC,WAAW,GAAG,CAACP,OAAD,EAAUT,QAAV,KAAuB;AACvCa,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACAJ,IAAAA,YAAY,CAACC,OAAb,GAAuBA,OAAO,CAACM,KAA/B;AACAP,IAAAA,YAAY,CAACR,QAAb,GAAwBA,QAAQ,CAACE,aAAjC;AAEH,GALD;;AAOA,QAAMe,cAAc,GAAG,CAACR,OAAD,EAAUS,IAAV,KAAmB;AACtClB,IAAAA,QAAQ,CAACE,aAAT,GAAyBgB,IAAzB;AACA3B,IAAAA,UAAU,CAAC0B,cAAX,CAA0BR,OAAO,CAACU,EAAlC,EAAsCnB,QAAtC,EAAgDK,KAAK,CAAC,SAAD,CAArD,EACCe,KADD,CACOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CADhB;AAED,GAJH;;AAQA,QAAMG,SAAS,GAAIf,OAAD,IAAa;AAC3BlB,IAAAA,UAAU,CAACkC,aAAX,CAAyBhB,OAAO,CAACU,EAAjC,EACCO,IADD,CACMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EADN,EAECT,KAFD,CAEOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFhB;AAIH,GALD;;AAQA,QAAMS,UAAU,GAAG,CAACrB,OAAD,EAAUT,QAAV,KAAsB;AAErCsB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBvB,QAApB;AACAT,IAAAA,UAAU,CAACwC,cAAX,CAA0BtB,OAAO,CAACU,EAAlC,EAAsCnB,QAAtC,EAAgDK,KAAK,CAAC,SAAD,CAArD,EACCqB,IADD,CACMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EADN,EAECT,KAFD,CAEOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFhB;AAGH,GAND;;AAQA,QAAMW,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAACf,MAAAA,IAAD;AAAOgB,MAAAA;AAAP,QAAgBD,CAAC,CAACE,MAAxB;AACAlC,IAAAA,WAAW,CAACmC,SAAS,KAAK,EACtB,GAAGA,SADmB;AAEtB,OAAClB,IAAD,GAAOgB;AAFe,KAAL,CAAV,CAAX;AAIH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cAEKnC,KAAK,CAACsC,QAAN,IAAkBtC,KAAK,CAACsC,QAAN,CAAeC,GAAf,CAAmB7B,OAAO,IAAI;AAC7C,0BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAA,oBAAKA,OAAO,CAACM;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKN,OAAO,CAAC8B,SAAR,CAAkBD,GAAlB,CAAsBtC,QAAQ,IAAG;AAC9B,8BAEI;AAAA,mCACI;AAAK,cAAA,SAAS,EAAG,KAAjB;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAG,KAAjB;AAAA,wCACI;AAAA,4BAAKA,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,sCAAUF,QAAQ,CAACG,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA,sCAAUH,QAAQ,CAACI,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI;AAAQ,gBAAA,SAAS,EAAG,iBAApB;AAAsC,gBAAA,OAAO,EAAK,MAAMY,WAAW,CAACP,OAAD,EAAUT,QAAV,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,eAWI;AAAQ,gBAAA,SAAS,EAAG,gBAApB;AAAqC,gBAAA,OAAO,EAAK,MAAM8B,UAAU,CAACrB,OAAD,EAAST,QAAT,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ,EAaCY,YAAY,IACXZ,QAAQ,CAACE,aAAT,IAA0BM,YAAY,CAACR,QADxC,IAEES,OAAO,CAACM,KAAR,IAAiBP,YAAY,CAACC,OAFhC,iBAID;AAAM,gBAAA,QAAQ,EAAE,MAAMQ,cAAc,CAACR,OAAD,EAAUT,QAAQ,CAACE,aAAnB,CAApC;AAAA,wCACI;AAAA,mDAEA;AAAO,oBAAA,IAAI,EAAC,MAAZ;AAAoB,oBAAA,IAAI,EAAC,MAAzB;AAAiC,oBAAA,QAAQ,EAAE8B;AAA3C;AAAA;AAAA;AAAA;AAAA,0BAFA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI;AAAA,mDAEA;AAAO,oBAAA,IAAI,EAAC,MAAZ;AAAoB,oBAAA,IAAI,EAAC,MAAzB;AAAgC,oBAAA,QAAQ,EAAEA;AAA1C;AAAA;AAAA;AAAA;AAAA,0BAFA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eASI;AAAO,kBAAA,IAAI,EAAC,QAAZ;AAAqB,kBAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,wBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAYhC,QAAQ,CAACE,aAArB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAoCH,SArCA,CAFL,EA0CKQ,WAAW,IAAKD,OAAO,CAACM,KAAR,IAAiBT,UAAjC,iBACG,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEG;AAAvB;AAAA;AAAA;AAAA;AAAA,gBA3CR,eA8CI;AAAK,UAAA,SAAS,EAAG,KAAjB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAG,UAAjB;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAG,mBAApB;AAAwC,cAAA,OAAO,EAAI,MAAMK,UAAU,CAACL,OAAD,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAG,UAAjB;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAG,gBAApB;AAAqC,cAAA,OAAO,EAAK,MAAMe,SAAS,CAACf,OAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9CJ;AAAA,SAAuCA,OAAO,CAACU,EAA/C;AAAA;AAAA;AAAA;AAAA,cADJ;AA2DC,KA5Dc;AAFvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAoEH;;GA1HQrB,W;UAGWF,U;;;KAHXE,W;AA4HTA,WAAW,CAAC0C,SAAZ,GAAwB,CACpB;AADoB,CAAxB;AAIA,eAAe1C,WAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport APIService from '../APIService';\nimport React, {useState, useEffect} from 'react'\nimport ExerciseForm from './ExerciseForm';\nimport {useCookies} from 'react-cookie';\nimport WorkoutForm from './WorkoutForm';\n\n\nfunction WorkoutList(props) {\n    \n    const [exercise, SetExercise] = useState({exercise_name:\"\", reps:\"\", sets:\"\"})\n    const [token] = useCookies(['mytoken'])\n    const [workoutAdd,setWorkoutAdd] =  useState(\"\")\n    const [exerciseEdit] = useState({workout:\"\",exercise:\"\"})\n    const [showAddForm, setShowAddForm] = useState(false)\n    const [showEditForm, setShowEditForm] = useState(false);\n\n    const ExrAddForm = (workout) => {\n        setShowAddForm(!showAddForm);\n        setWorkoutAdd(workout.title)\n    }\n\n\n    const ExrEditForm = (workout, exercise) => {\n        setShowEditForm(!showEditForm);\n        exerciseEdit.workout = workout.title\n        exerciseEdit.exercise = exercise.exercise_name\n        \n    }\n\n    const UpdateExercise = (workout, name) => {\n        exercise.exercise_name = name\n        APIService.UpdateExercise(workout.id, exercise, token['mytoken'])\n        .catch(error => console.log(error))\n      }\n    \n   \n\n    const deleteBtn = (workout) => {\n        APIService.DeleteWorkout(workout.id)\n        .then(window.location.reload())\n        .catch(error => console.log(error))\n       \n    }\n\n\n    const deleteExcr = (workout, exercise) =>{\n        \n        console.log(\"TEST\", exercise)\n        APIService.DeleteExercise(workout.id, exercise, token['mytoken'])\n        .then(window.location.reload())\n        .catch(error => console.log(error))\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        SetExercise(prevState => ({\n            ...prevState,\n            [name]:value\n        }))\n    }\n\n    return (\n        <div className=\"WorkoutList\">\n          \n            {props.workouts && props.workouts.map(workout => {\n                return (\n                    <div className=\"WorkoutElement\" key = {workout.id}>\n                        <h3>{workout.title}</h3>\n                        {workout.exercises.map(exercise =>{\n                            return (\n                                \n                                <div key = {exercise.exercise_name}>\n                                    <div className = \"row\">\n                                        <div className = \"col\">\n                                            <h2>{exercise.exercise_name}</h2>\n                                            <h2>Reps:{exercise.reps}</h2>\n                                            <h2>Sets:{exercise.sets}</h2>\n                                        </div>\n                                     \n                                    {/* <div className = \"col-md-1\"> */}\n                                        <button className = \"btn btn-primary\" onClick  = {() => ExrEditForm(workout, exercise)}> Edit Exercise</button>\n                                    {/* </div> */}\n                                    {/* <div className = \"col-md-2\"> */}\n                                        <button className = \"btn btn-danger\" onClick  = {() => deleteExcr(workout,exercise)}> Delete exercise</button>\n                                    {/* </div> */}\n                                    {showEditForm &&\n                                     (exercise.exercise_name == exerciseEdit.exercise) &&\n                                      (workout.title == exerciseEdit.workout) && \n\n                                    <form onSubmit={() => UpdateExercise(workout, exercise.exercise_name)}>\n                                        <label>\n                                        Reps:\n                                        <input type=\"text\"  name=\"reps\"  onChange={handleChange}/>\n                                        </label>\n                                        <label>\n                                        Sets:\n                                        <input type=\"text\"  name=\"sets\" onChange={handleChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Change\" />\n                                       \n                                  </form>\n                                    } \n                                    </div>\n                                </div>\n                            )\n                        })\n\n                        }\n                        {showAddForm && (workout.title == workoutAdd) &&\n                            <ExerciseForm workout={workout}/>\n                        }\n                    \n                        <div className = \"row\">\n                            <div className = \"col-md-2\">\n                                <button className = \"btn btn-secondary\" onClick = {() => ExrAddForm(workout)} > \n                                                                        Add new exercise</button>\n                            </div>\n                            <div className = \"col-md-2\">\n                                <button className = \"btn btn-danger\" onClick  = {() => deleteBtn(workout)}> Delete workout</button>\n                            </div>\n\n                        </div>\n                    </div>\n                    )\n                }\n            )}\n           \n            </div> \n    )\n}\n\nWorkoutList.propTypes = {\n    // workouts: []\n}\n\nexport default WorkoutList\n\n"]},"metadata":{},"sourceType":"module"}