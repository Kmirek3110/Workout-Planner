{"ast":null,"code":"export default class APIService {\n  static PlanCreate(event, body, token) {\n    event.preventDefault();\n    console.log(\"token detail\", token);\n    return fetch('http://127.0.0.1:8000/plan-create', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static PlanDelete(token, plan_id) {\n    console.log(\"token detail\", token);\n    return fetch(`http://127.0.0.1:8000/plan-delete/${plan_id}`, {\n      'method': 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(resp => resp.json());\n  }\n\n  static PlanDetail(plan_id, token) {\n    console.log(\"token detail\", token);\n    return fetch(`http://127.0.0.1:8000/plan-detail/${plan_id}`, {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(resp => resp.json());\n  }\n\n  static PlanAddWorkout(plan_id, body, token) {\n    console.log(\"Asdasd\", body);\n    return fetch(`http://127.0.0.1:8000/plan-add-workout/${plan_id}`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static WorkoutList(token) {\n    console.log(\"Kreacja\", token);\n    return fetch(`http://127.0.0.1:8000/workout-list`, {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(resp => resp.json());\n  }\n\n  static CreateWorkout(body, token) {\n    console.log(\"Kreacja\", token);\n    return fetch(`http://127.0.0.1:8000/workout-create`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static UpdateWorkout(workout_id, body, exercises, token) {\n    console.log(\"Updatowanie\", workout_id, body);\n    console.log(\"Przy updatowaniu exercises\", exercises);\n    return fetch(`http://127.0.0.1:8000/workout-update/${workout_id}/`, {\n      'method': 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static AddExercise(workout_id, body, token) {\n    console.log(\"Przy dodawaniu exercises\", body);\n    return fetch(`http://127.0.0.1:8000/workout-add-exercise/${workout_id}`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static UpdateExercise(workout_id, body, token) {\n    console.log(\"Przy udpotowaniu exercises\", body);\n    return fetch(`http://127.0.0.1:8000/workout-update-exercise/${workout_id}`, {\n      'method': 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static DeleteExercise(workout_id, body, token) {\n    console.log(\"Przy usuwaniu exercises\", body);\n    return fetch(`http://127.0.0.1:8000/workout-delete-exercise/${workout_id}`, {\n      'method': 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static DeleteWorkout(workout_id, token) {\n    console.log(\"Usuwanie\", workout_id);\n    return fetch(`http://127.0.0.1:8000/workout-delete/${workout_id}/`, {\n      'method': 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    });\n  }\n\n  static LoginUser(body) {\n    return fetch('http://127.0.0.1:8000/auth/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static RegisterUser(body) {\n    return fetch('http://127.0.0.1:8000/users', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n}","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/APIService.js"],"names":["APIService","PlanCreate","event","body","token","preventDefault","console","log","fetch","headers","JSON","stringify","then","resp","json","PlanDelete","plan_id","PlanDetail","PlanAddWorkout","WorkoutList","CreateWorkout","UpdateWorkout","workout_id","exercises","AddExercise","UpdateExercise","DeleteExercise","DeleteWorkout","LoginUser","RegisterUser"],"mappings":"AACA,eAAe,MAAMA,UAAN,CAAgB;AAEV,SAAVC,UAAU,CAACC,KAAD,EAAOC,IAAP,EAAaC,KAAb,EAAmB;AAChCF,IAAAA,KAAK,CAACG,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BH,KAA3B;AACA,WAAOI,KAAK,CAAC,mCAAD,EAAqC;AAC7C,gBAAS,MADoC;AAE7CC,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQL,KAAM;AAF1B,OAFoC;AAM7CD,MAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AANwC,KAArC,CAAL,CAOJS,IAPI,CAOCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPT,CAAP;AAQH;;AAEgB,SAAVC,UAAU,CAACX,KAAD,EAAQY,OAAR,EAAgB;AAC7BV,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BH,KAA3B;AACA,WAAOI,KAAK,CAAE,qCAAoCQ,OAAQ,EAA9C,EAAgD;AACxD,gBAAS,QAD+C;AAExDP,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQL,KAAM;AAF1B;AAF+C,KAAhD,CAAL,CAMJQ,IANI,CAMCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANT,CAAP;AAOH;;AAEgB,SAAVG,UAAU,CAACD,OAAD,EAAUZ,KAAV,EAAgB;AAC7BE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BH,KAA3B;AACA,WAAOI,KAAK,CAAE,qCAAoCQ,OAAQ,EAA9C,EAAgD;AACxD,gBAAS,KAD+C;AAExDP,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQL,KAAM;AAF1B;AAF+C,KAAhD,CAAL,CAMJQ,IANI,CAMCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANT,CAAP;AAOH;;AAEoB,SAAdI,cAAc,CAACF,OAAD,EAAUb,IAAV,EAAgBC,KAAhB,EAAsB;AACvCE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBJ,IAArB;AACA,WAAOK,KAAK,CAAE,0CAAyCQ,OAAQ,EAAnD,EAAsD;AAC9D,gBAAS,MADqD;AAE9DP,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQL,KAAM;AAF1B,OAFqD;AAM9DD,MAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AANyD,KAAtD,CAAL,CAQJS,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,CAAP;AAUH;;AAGiB,SAAXK,WAAW,CAACf,KAAD,EAAO;AACrBE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;AACA,WAAOI,KAAK,CAAE,oCAAF,EAAuC;AAC/C,gBAAS,KADsC;AAE/CC,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQL,KAAM;AAF1B;AAFsC,KAAvC,CAAL,CAMJQ,IANI,CAMCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANT,CAAP;AAOH;;AAEmB,SAAbM,aAAa,CAACjB,IAAD,EAAOC,KAAP,EAAa;AAC7BE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;AACA,WAAOI,KAAK,CAAE,sCAAF,EAAyC;AACjD,gBAAS,MADwC;AAEjDC,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQL,KAAM;AAF1B,OAFwC;AAMjDD,MAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AAN4C,KAAzC,CAAL,CAQJS,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,CAAP;AASH;;AAEmB,SAAbO,aAAa,CAACC,UAAD,EAAanB,IAAb,EAAmBoB,SAAnB,EAA8BnB,KAA9B,EAAoC;AACpDE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0Be,UAA1B,EAAsCnB,IAAtC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCgB,SAAzC;AACA,WAAOf,KAAK,CAAE,wCAAuCc,UAAW,GAApD,EAAwD;AAChE,gBAAS,KADuD;AAEhEb,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQL,KAAM;AAF1B,OAFuD;AAMhED,MAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AAN2D,KAAxD,CAAL,CASJS,IATI,CASCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATT,CAAP;AAUH;;AAEiB,SAAXU,WAAW,CAACF,UAAD,EAAanB,IAAb,EAAmBC,KAAnB,EAAyB;AACvCE,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCJ,IAAvC;AAEA,WAAOK,KAAK,CAAE,8CAA6Cc,UAAW,EAA1D,EAA6D;AACrE,gBAAS,MAD4D;AAErEb,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQL,KAAM;AAF1B,OAF4D;AAMrED,MAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AANgE,KAA7D,CAAL,CASJS,IATI,CASCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATT,CAAP;AAUH;;AAEoB,SAAdW,cAAc,CAACH,UAAD,EAAanB,IAAb,EAAmBC,KAAnB,EAAyB;AAC1CE,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCJ,IAAzC;AACA,WAAOK,KAAK,CAAE,iDAAgDc,UAAW,EAA7D,EAAgE;AACxE,gBAAS,KAD+D;AAExEb,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQL,KAAM;AAF1B,OAF+D;AAMxED,MAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AANmE,KAAhE,CAAL,CASJS,IATI,CASCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATT,CAAP;AAUH;;AAEoB,SAAdY,cAAc,CAACJ,UAAD,EAAanB,IAAb,EAAmBC,KAAnB,EAAyB;AAC1CE,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCJ,IAAtC;AACA,WAAOK,KAAK,CAAE,iDAAgDc,UAAW,EAA7D,EAAgE;AACxE,gBAAS,QAD+D;AAExEb,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQL,KAAM;AAF1B,OAF+D;AAMxED,MAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AANmE,KAAhE,CAAL,CASJS,IATI,CASCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATT,CAAP;AAUH;;AAEmB,SAAba,aAAa,CAACL,UAAD,EAAalB,KAAb,EAAmB;AACnCE,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBe,UAAvB;AACA,WAAOd,KAAK,CAAE,wCAAuCc,UAAW,GAApD,EAAwD;AAChE,gBAAS,QADuD;AAEhEb,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQL,KAAM;AAF1B;AAFuD,KAAxD,CAAZ;AAOH;;AACe,SAATwB,SAAS,CAACzB,IAAD,EAAO;AAEnB,WAAOK,KAAK,CAAC,6BAAD,EAAgC;AAC1C,gBAAS,MADiC;AAE1CC,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV,OAFiC;AAMxCN,MAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AANmC,KAAhC,CAAL,CAQJS,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,CAAP;AAUD;;AAGkB,SAAZe,YAAY,CAAC1B,IAAD,EAAO;AAExB,WAAOK,KAAK,CAAC,6BAAD,EAAgC;AAC1C,gBAAS,MADiC;AAE1CC,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV,OAFiC;AAMxCN,MAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AANmC,KAAhC,CAAL,CAQJS,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,CAAP;AAUD;;AA3KwB","sourcesContent":["\nexport default class APIService{\n\n    static PlanCreate(event,body, token){\n        event.preventDefault()\n        console.log(\"token detail\",token)\n        return fetch('http://127.0.0.1:8000/plan-create',{\n            'method':'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            },\n            body:JSON.stringify(body)\n        }).then(resp => resp.json())\n    }\n\n    static PlanDelete(token, plan_id){\n        console.log(\"token detail\",token)\n        return fetch(`http://127.0.0.1:8000/plan-delete/${plan_id}`,{\n            'method':'DELETE',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            },\n        }).then(resp => resp.json())\n    }\n\n    static PlanDetail(plan_id, token){\n        console.log(\"token detail\",token)\n        return fetch(`http://127.0.0.1:8000/plan-detail/${plan_id}`,{\n            'method':'GET',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            }\n        }).then(resp => resp.json())\n    }\n\n    static PlanAddWorkout(plan_id, body, token){\n        console.log(\"Asdasd\",body)\n        return fetch(`http://127.0.0.1:8000/plan-add-workout/${plan_id}`, {\n            'method':'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            }, \n            body:JSON.stringify(body)\n\n        }).then(resp => resp.json())\n\n    }\n\n\n    static WorkoutList(token){\n        console.log(\"Kreacja\", token)\n        return fetch(`http://127.0.0.1:8000/workout-list`, {\n            'method':'GET',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            }\n        }).then(resp => resp.json())\n    }\n    \n    static CreateWorkout(body, token){\n        console.log(\"Kreacja\", token)\n        return fetch(`http://127.0.0.1:8000/workout-create`, {\n            'method':'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            }, \n            body:JSON.stringify(body)\n\n        }).then(resp => resp.json())\n    }\n\n    static UpdateWorkout(workout_id, body, exercises, token){\n        console.log(\"Updatowanie\",workout_id, body)\n        console.log(\"Przy updatowaniu exercises\",exercises)\n        return fetch(`http://127.0.0.1:8000/workout-update/${workout_id}/`, {\n            'method':'PUT',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` ,\n            }, \n            body:JSON.stringify(body)\n           \n\n        }).then(resp => resp.json())\n    }\n\n    static AddExercise(workout_id, body, token){\n        console.log(\"Przy dodawaniu exercises\",body)\n        \n        return fetch(`http://127.0.0.1:8000/workout-add-exercise/${workout_id}`, {\n            'method':'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}`,\n            }, \n            body:JSON.stringify(body)\n           \n\n        }).then(resp => resp.json())\n    }\n\n    static UpdateExercise(workout_id, body, token){\n        console.log(\"Przy udpotowaniu exercises\",body)\n        return fetch(`http://127.0.0.1:8000/workout-update-exercise/${workout_id}`, {\n            'method':'PUT',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}`,\n            }, \n            body:JSON.stringify(body)\n           \n\n        }).then(resp => resp.json())\n    }\n\n    static DeleteExercise(workout_id, body, token){\n        console.log(\"Przy usuwaniu exercises\",body)\n        return fetch(`http://127.0.0.1:8000/workout-delete-exercise/${workout_id}`, {\n            'method':'DELETE',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}`,\n            }, \n            body:JSON.stringify(body)\n           \n\n        }).then(resp => resp.json())\n    }\n\n    static DeleteWorkout(workout_id, token){\n        console.log(\"Usuwanie\",workout_id)\n        return fetch(`http://127.0.0.1:8000/workout-delete/${workout_id}/`, {\n            'method':'DELETE',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            }\n        })\n    }\n    static LoginUser(body) {\n\n        return fetch('http://127.0.0.1:8000/auth/', {\n          'method':'POST',\n          headers: {\n              'Content-Type':'application/json',\n              \n            }, \n            body:JSON.stringify(body)\n  \n        }).then(resp => resp.json())\n  \n      }\n  \n  \n      static RegisterUser(body) {\n  \n        return fetch('http://127.0.0.1:8000/users', {\n          'method':'POST',\n          headers: {\n              'Content-Type':'application/json',\n              \n            }, \n            body:JSON.stringify(body)\n  \n        }).then(resp => resp.json())\n  \n      }\n}"]},"metadata":{},"sourceType":"module"}