{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/FinishedList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FinishedList() {\n  _s();\n\n  const [finished, setFinished] = useState([]);\n  const [token] = useCookies(['mytoken']);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/finished-list', {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token['mytoken']}`\n      }\n    }).then(resp => resp.json()).then(resp => setFinished(resp));\n  }, []);\n  console.log(finished);\n  let value = finished.map(function (item) {\n    return item.progress;\n  });\n  const data = {\n    labels: ['01', '02', '03', '04', '05', '06'],\n    datasets: [{\n      label: 'X',\n      data: value,\n      backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)'],\n      borderWidth: 1\n    }]\n  };\n  var dict = new Object();\n  {\n    finished && finished.forEach(function (element) {\n      if (element.plan.plan_name in dict) {\n        dict[element.plan.plan_name].push(element);\n      } else {\n        dict[element.plan.plan_name] = [];\n      }\n    });\n  }\n  console.log(Object.entries(dict), \"DICT\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: finished && Object.entries(dict).map(progress => {\n      return (\n        /*#__PURE__*/\n        // <Line type={'line'} data={data}/>\n        _jsxDEV(\"h3\", {\n          children: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      );\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FinishedList, \"/1GdCU3gHzU2+s5pqgw383jj+7c=\", false, function () {\n  return [useCookies];\n});\n\n_c = FinishedList;\nexport default FinishedList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinishedList\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/FinishedList.js"],"names":["React","useState","useEffect","useCookies","Line","FinishedList","finished","setFinished","token","fetch","headers","then","resp","json","console","log","value","map","item","progress","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","dict","Object","forEach","element","plan","plan_name","push","entries"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,IAAUL,UAAU,CAAC,CAAC,SAAD,CAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAAC,qCAAD,EAAwC;AAC3C,gBAAS,KADkC;AAE3CC,MAAAA,OAAO,EAAE;AACP,wBAAe,kBADR;AAEP,yBAAiB,SAAQF,KAAK,CAAC,SAAD,CAAY;AAFnC;AAFkC,KAAxC,CAAL,CAOCG,IAPD,CAOMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPd,EAQCF,IARD,CAQMC,IAAI,IAAIL,WAAW,CAACK,IAAD,CARzB;AAUD,GAXM,EAWJ,EAXI,CAAT;AAcAE,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACA,MAAIU,KAAK,GAAGV,QAAQ,CAACW,GAAT,CAAa,UAASC,IAAT,EAAc;AACrC,WAAOA,IAAI,CAACC,QAAZ;AACD,GAFW,CAAZ;AAGA,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CADG;AAEXC,IAAAA,QAAQ,EAAE,CAAC;AACPC,MAAAA,KAAK,EAAE,GADA;AAEPH,MAAAA,IAAI,EAAEJ,KAFC;AAGPQ,MAAAA,eAAe,EAAE,CACb,yBADa,CAHV;AAOPC,MAAAA,WAAW,EAAE,CACT,uBADS,CAPN;AAWPC,MAAAA,WAAW,EAAE;AAXN,KAAD;AAFC,GAAb;AAgBA,MAAIC,IAAI,GAAG,IAAIC,MAAJ,EAAX;AAGA;AAACtB,IAAAA,QAAQ,IAAIA,QAAQ,CAACuB,OAAT,CAAiB,UAASC,OAAT,EAAiB;AAC7C,UAAIA,OAAO,CAACC,IAAR,CAAaC,SAAb,IAA0BL,IAA9B,EAAmC;AACjCA,QAAAA,IAAI,CAACG,OAAO,CAACC,IAAR,CAAaC,SAAd,CAAJ,CAA6BC,IAA7B,CAAkCH,OAAlC;AACC,OAFH,MAGI;AACFH,QAAAA,IAAI,CAACG,OAAO,CAACC,IAAR,CAAaC,SAAd,CAAJ,GAA+B,EAA/B;AACD;AACA,KAPU,CAAZ;AAQA;AAMDlB,EAAAA,OAAO,CAACC,GAAR,CAAYa,MAAM,CAACM,OAAP,CAAeP,IAAf,CAAZ,EAAkC,MAAlC;AAEA,sBACI;AAAA,cACGrB,QAAQ,IAAIsB,MAAM,CAACM,OAAP,CAAeP,IAAf,EAAqBV,GAArB,CAAyBE,QAAQ,IAAI;AAChD;AAAA;AACE;AACA;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AAFF;AAID,KALY;AADf;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GApEQd,Y;UAGWF,U;;;KAHXE,Y;AAsET,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useCookies} from 'react-cookie';\nimport {Line} from 'react-chartjs-2'\n\nfunction FinishedList() {\n\n    const [finished, setFinished] = useState([])\n    const [token] = useCookies(['mytoken'])\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/finished-list', {\n          'method':'GET',\n          headers: {\n            'Content-Type':'application/json',\n            'Authorization':`Token ${token['mytoken']}` \n        }\n        })\n        .then(resp => resp.json())\n        .then(resp => setFinished(resp))\n    \n      }, [])\n\n\n    console.log(finished)\n    let value = finished.map(function(item){\n      return item.progress;\n    })\n    const data = {\n      labels: ['01', '02', '03', '04', '05', '06'],\n      datasets: [{\n          label: 'X',\n          data: value,\n          backgroundColor: [\n              'rgba(255, 99, 132, 0.2)'\n\n          ],\n          borderColor: [\n              'rgba(255, 99, 132, 1)'\n\n          ],\n          borderWidth: 1\n      }]\n    }\n    var dict = new Object();\n    \n    \n    {finished && finished.forEach(function(element){\n      if (element.plan.plan_name in dict){   \n        dict[element.plan.plan_name].push(element)\n        }\n      else{\n        dict[element.plan.plan_name] = []\n      }\n      })\n    }\n\n    \n\n\n\n    console.log(Object.entries(dict), \"DICT\")\n    \n    return (\n        <div>\n          {finished && Object.entries(dict).map(progress => {\n            return (\n              // <Line type={'line'} data={data}/>\n              <h3>{progress}</h3>\n            )\n          })}\n        </div>\n    )\n}\n\nexport default FinishedList\n"]},"metadata":{},"sourceType":"module"}