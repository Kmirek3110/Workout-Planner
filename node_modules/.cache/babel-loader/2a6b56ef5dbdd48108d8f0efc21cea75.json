{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport APIService from '../APIService';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const [title, SetWorkouttitle] = useState('');\n  const [all_exercises, SetWExercises] = useState([]);\n  const [exercises, setExercises] = useState([]);\n\n  const UpdateWorkout = () => {\n    APIService.UpdateWorkout(props.workout.id, {\n      title,\n      w_exercises\n    }).then(resp => props.updatedInformation(resp));\n  };\n\n  const InsertWorkout = () => {\n    APIService.CreateWorkout({\n      title\n    }).then(resp => props.insertedInformation(resp));\n  };\n\n  const insertInformation = exercise => {\n    const new_w_exercises = [...w_exercises, exercise];\n    SetWExercises(new_w_exercises);\n  };\n\n  useEffect(() => {\n    SetWorkouttitle(props.workout.title);\n    SetWExercises(props.workout.exercises);\n  }, [props.workout]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/exercise-list', {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(resp => setExercises(resp));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.workout ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        className: \"form-label\",\n        children: props.workout.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"title\",\n        placeholder: \"Please enter workout name\",\n        value: title,\n        onChange: e => SetWorkouttitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"exercises\",\n        className: \"form-label\",\n        children: \"Exercises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: exercises,\n        onChange: e => insertInformation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }, this), props.workout.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: UpdateWorkout,\n        className: \"btn btn-success\",\n        children: \"Update Workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: InsertWorkout,\n        className: \"btn btn-success\",\n        children: \"Create new workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"vJaW7DeytVcwhHfYFvbBVxhFjaw=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/Form.js"],"names":["React","useState","useEffect","APIService","Select","Form","props","title","SetWorkouttitle","all_exercises","SetWExercises","exercises","setExercises","UpdateWorkout","workout","id","w_exercises","then","resp","updatedInformation","InsertWorkout","CreateWorkout","insertedInformation","insertInformation","exercise","new_w_exercises","fetch","headers","json","name","e","target","value"],"mappings":"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","sourcesContent":["\n\nimport React, {useState, useEffect} from 'react'\nimport APIService from '../APIService'\nimport Select from 'react-select'\n\n\nfunction Form(props) {\n    const [title, SetWorkouttitle] = useState('')\n    const [all_exercises, SetWExercises] = useState([])\n    const [exercises, setExercises] = useState([])\n\n    const UpdateWorkout = () => {\n        APIService.UpdateWorkout(props.workout.id, {title, w_exercises})\n        .then(resp => props.updatedInformation(resp))\n\n    }\n\n    const InsertWorkout = () => {\n        APIService.CreateWorkout({title})\n        .then(resp => props.insertedInformation(resp))\n    }\n    const insertInformation = (exercise) => {\n        const new_w_exercises= [...w_exercises, exercise]\n        SetWExercises(new_w_exercises)\n    \n    }\n\n    useEffect(() => {\n        SetWorkouttitle(props.workout.title)\n        SetWExercises(props.workout.exercises)\n    }, [props.workout])\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/exercise-list', {\n        'method':'GET',\n        headers: {\n            'Content-Type':'application/json',\n            }\n            })\n        .then(resp => resp.json())\n        .then(resp => setExercises(resp))\n    }, [])\n    \n\n    return (\n        <div>\n            \n            {props.workout ? (\n               <div className = \"mb-3\">\n               <label htmlFor = \"title\" className = \"form-label\">{props.workout.name}</label>\n               <input type=\"text\" className = \"form-control\" id=\"title\" placeholder = \"Please enter workout name\"\n               value = {title} onChange = {e => SetWorkouttitle(e.target.value)}></input>\n\n                <label htmlFor = \"exercises\" className = \"form-label\">Exercises</label>\n\n                {/* <select className = \"form-control\" id=\"exercises\" rows=\"5\"\n                value = {w_exercises.name} onChange = {e => SetWExercises(e.target.value)}\n                ></select> */}\n               <Select options={exercises} onChange= {e => insertInformation(e.target.value)} />\n            \n               <br/>\n               {     props.workout.id ? \n                    <button onClick = {UpdateWorkout} className = \"btn btn-success\">Update Workout</button>:\n                    <button onClick = {InsertWorkout} className = \"btn btn-success\">Create new workout</button>\n                }\n               \n               </div>            \n            ):null}\n            {\n\n            }\n            \n        </div>\n    )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}