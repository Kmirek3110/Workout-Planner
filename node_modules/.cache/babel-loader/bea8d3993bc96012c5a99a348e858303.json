{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/Workout.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport APIService from '../APIService';\nimport ExerciseForm from './ExerciseForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Workout(props) {\n  _s();\n\n  const [exercise, SetExercise] = useState({\n    exercise_name: \"\",\n    reps: \"\",\n    sets: \"\"\n  });\n  const [token] = useCookies(['mytoken']);\n  const [workoutAdd, setWorkoutAdd] = useState(\"\");\n  const [exerciseEdit] = useState({\n    workout: \"\",\n    exercise: \"\"\n  });\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false); // var scrollposition;\n\n  const ExrAddForm = workout => {\n    setShowAddForm(!showAddForm);\n    setWorkoutAdd(workout.title);\n  };\n\n  const ExrEditForm = (workout, exercise) => {\n    setShowEditForm(!showEditForm);\n    exerciseEdit.workout = workout.title;\n    exerciseEdit.exercise = exercise.exercise_name;\n  };\n\n  const UpdateExercise = (workout, name) => {\n    exercise.exercise_name = name;\n    APIService.UpdateExercise(workout.id, exercise, token['mytoken']).then(window.location.reload()).catch(error => console.log(error));\n  };\n\n  const deleteBtn = workout => {\n    APIService.DeleteWorkout(workout.id).then(props.deleteWorkout(workout)) // .then(window.location.reload())\n    .catch(error => console.log(error));\n  };\n\n  const deleteExcr = (workout, exercise) => {\n    console.log(\"TEST\", exercise);\n    APIService.DeleteExercise(workout.id, exercise, token['mytoken']).then(window.location.reload()).catch(error => console.log(error));\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    SetExercise(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WorkoutElement\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.workout.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }, this), props.workout && props.workout.exercises.map(exercise => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: exercise.exercise_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Reps:\", exercise.reps]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Sets:\", exercise.sets]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary test\",\n            onClick: () => ExrEditForm(props.workout, exercise),\n            children: \" Edit Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger test\",\n            onClick: () => deleteExcr(props.workout, exercise),\n            children: \" Delete exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 41\n          }, this), showEditForm && exercise.exercise_name == exerciseEdit.exercise && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: () => UpdateExercise(props.workout, exercise.exercise_name),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Reps:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"reps\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Sets:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"sets\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }, this)\n      }, exercise.exercise_name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }, this);\n    }), showAddForm && /*#__PURE__*/_jsxDEV(ExerciseForm, {\n      workout: props.workout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => ExrAddForm(props.workout),\n          children: \"Add new exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => deleteBtn(props.workout),\n          children: \" Delete workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }, this)]\n  }, props.workout.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Workout, \"vxmQtP4HXgj/rc8LnittUOws26g=\", false, function () {\n  return [useCookies];\n});\n\n_c = Workout;\nexport default Workout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workout\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/Workout.js"],"names":["PropTypes","React","useState","useEffect","useCookies","APIService","ExerciseForm","Workout","props","exercise","SetExercise","exercise_name","reps","sets","token","workoutAdd","setWorkoutAdd","exerciseEdit","workout","showAddForm","setShowAddForm","showEditForm","setShowEditForm","ExrAddForm","title","ExrEditForm","UpdateExercise","name","id","then","window","location","reload","catch","error","console","log","deleteBtn","DeleteWorkout","deleteWorkout","deleteExcr","DeleteExercise","handleChange","e","value","target","prevState","exercises","map"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, {useState, useEffect} from 'react'\nimport {useCookies} from 'react-cookie';\nimport APIService from '../APIService';\nimport ExerciseForm from './ExerciseForm';\n\nfunction Workout(props) {\n\n    const [exercise, SetExercise] = useState({exercise_name:\"\", reps:\"\", sets:\"\"})\n    const [token] = useCookies(['mytoken'])\n    const [workoutAdd,setWorkoutAdd] =  useState(\"\")\n    const [exerciseEdit] = useState({workout:\"\",exercise:\"\"})\n    const [showAddForm, setShowAddForm] = useState(false)\n    const [showEditForm, setShowEditForm] = useState(false);\n    // var scrollposition;\n\n    const ExrAddForm = (workout) => {\n        setShowAddForm(!showAddForm);\n        setWorkoutAdd(workout.title)\n    }\n\n\n    const ExrEditForm = (workout, exercise) => {\n        setShowEditForm(!showEditForm);\n        exerciseEdit.workout = workout.title\n        exerciseEdit.exercise = exercise.exercise_name\n        \n    }\n\n    const UpdateExercise = (workout, name) => {\n        exercise.exercise_name = name\n        APIService.UpdateExercise(workout.id, exercise, token['mytoken'])\n        .then(window.location.reload())\n        .catch(error => console.log(error))\n      }\n    \n   \n    const deleteBtn = (workout) => {\n        APIService.DeleteWorkout(workout.id)\n        .then(props.deleteWorkout(workout))\n        // .then(window.location.reload())\n        .catch(error => console.log(error))\n    }\n\n\n    const deleteExcr = (workout, exercise) =>{\n        \n        console.log(\"TEST\", exercise)\n        APIService.DeleteExercise(workout.id, exercise, token['mytoken'])\n        .then(window.location.reload())\n        .catch(error => console.log(error))\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        SetExercise(prevState => ({\n            ...prevState,\n            [name]:value\n        }))\n    }\n\n\n\n\n    return (\n        <div className=\"WorkoutElement\" key = {props.workout.id}>\n                        <h3>{props.workout.title}</h3>\n                        {props.workout && props.workout.exercises.map(exercise =>{\n                            return (\n                                \n                                <div key = {exercise.exercise_name}>\n                                    <div className = \"row\">\n                                        <div className = \"col\">\n                                            <h2>{exercise.exercise_name}</h2>\n                                            <h2>Reps:{exercise.reps}</h2>\n                                            <h2>Sets:{exercise.sets}</h2>\n                                        </div>\n                                     \n                                    {/* <div className = \"col-md-1\"> */}\n                                        <button className = \"btn btn-primary test\" onClick  = {() => ExrEditForm(props.workout, exercise)}> Edit Exercise</button>\n                                    {/* </div> */}\n                                    {/* <div className = \"col-md-2\"> */}\n                                        <button className = \"btn btn-danger test\" onClick  = {() => deleteExcr(props.workout,exercise)}> Delete exercise</button>\n                                    {/* </div> */}\n                                    {showEditForm &&\n                                     (exercise.exercise_name == exerciseEdit.exercise) && \n                                    <form onSubmit={() => UpdateExercise(props.workout, exercise.exercise_name)}>\n                                        <label>\n                                        Reps:\n                                        <input type=\"text\"  name=\"reps\"  onChange={handleChange}/>\n                                        </label>\n                                        <label>\n                                        Sets:\n                                        <input type=\"text\"  name=\"sets\" onChange={handleChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Change\" />\n                                       \n                                  </form>\n                                    } \n                                    </div>\n                                </div>)\n\n\n                        }) \n                        }\n                        {showAddForm &&\n                            <ExerciseForm workout={props.workout}/>\n                        }\n                    \n                        <div className = \"row\">\n                            <div className = \"col-md-2\">\n                                <button className = \"btn btn-secondary\" onClick = {() => ExrAddForm(props.workout)} > \n                                                                        Add new exercise</button>\n                            </div>\n                            <div className = \"col-md-2\">\n                                <button className = \"btn btn-danger\" onClick  = {() => deleteBtn(props.workout)}> Delete workout</button>\n                            </div>\n\n                        </div>\n\n                        </div>\n    )\n}\n\n\nexport default Workout\n\n"]},"metadata":{},"sourceType":"module"}