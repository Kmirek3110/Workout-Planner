{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js\",\n    _s = $RefreshSig$();\n\nimport APIService from '../APIService';\nimport React, { useState, useEffect } from 'react';\nimport ExerciseForm from './ExerciseForm';\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkoutList(props) {\n  _s();\n\n  const [exercise, SetExercise] = useState({\n    exercise_name: \"\",\n    reps: \"\",\n    sets: \"\"\n  });\n  const [token] = useCookies(['mytoken']);\n  const [chosenWorkout, setchosenWorkout] = useState(\"\");\n  const [exerciseEdit] = useState({\n    workout: \"\",\n    exercise: \"\"\n  });\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [errors] = useState({\n    reps: \"\",\n    sets: \"\"\n  });\n  const [workouts, setWorkouts] = useState([]);\n  useEffect(() => {\n    setWorkouts(props.workouts);\n  }, [props.workouts]);\n\n  const ExrAddForm = workout => {\n    setShowAddForm(!showAddForm);\n    setchosenWorkout(workout.title);\n  };\n\n  const ExrEditForm = (workout, exercise) => {\n    setShowEditForm(!showEditForm);\n    exerciseEdit.workout = workout.title;\n    exerciseEdit.exercise = exercise.exercise_name;\n  };\n\n  const deleteBtn = workout => {\n    APIService.DeleteWorkout(workout.id).then(window.location.reload()).catch(error => console.log(error));\n  };\n\n  const addNewEx = (workout, exercise) => {\n    var tmp_workouts = [];\n    workouts.forEach(myworkout => {\n      if (myworkout.id === workout) {\n        const wtmp = myworkout;\n        wtmp.exercises.push(exercise);\n        tmp_workouts.push(wtmp);\n      } else {\n        tmp_workouts.push(myworkout);\n      }\n    });\n    setWorkouts(tmp_workouts);\n  };\n\n  const UpdEx = (workout, exercise) => {\n    var tmp_workouts = [];\n    workouts.forEach(myworkout => {\n      if (myworkout.id == workout.id) {\n        const wtmp = myworkout;\n        const index = wtmp.exercises.findIndex(ex => ex.exercise_name === exercise.exercise_name);\n        wtmp.exercises[index] = exercise;\n        tmp_workouts.push(wtmp);\n      } else {\n        tmp_workouts.push(myworkout);\n      }\n    });\n    setWorkouts(tmp_workouts);\n  };\n\n  const dltEx = exercise => {\n    var tmp_workouts = [];\n    workouts.forEach(workout => {\n      const wtmp = workout;\n      wtmp.exercises = workout.exercises.filter(exer => {\n        if (exer.exercise_name === exercise.exercise_name) {\n          return false;\n        }\n\n        return true;\n      });\n      tmp_workouts.push(wtmp);\n    });\n    setWorkouts(tmp_workouts);\n  };\n\n  const deleteExcr = (workout, exercise) => {\n    APIService.DeleteExercise(workout.id, exercise, token['mytoken']).then(dltEx(exercise)).catch(error => console.log(error));\n  };\n\n  const UpdateExercise = (event, workout, name) => {\n    event.preventDefault();\n    exercise.exercise_name = name;\n\n    if (errors.reps.length === 0 && errors.reps.length === 0) {\n      APIService.UpdateExercise(workout.id, exercise, token['mytoken']).then(UpdEx(workout, exercise)).catch(error => console.log(error));\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    SetExercise(prevState => ({ ...prevState,\n      [name]: value\n    }));\n\n    switch (name) {\n      case \"reps\":\n        errors.reps = !isNaN(value) && 0 < value && value < 30 ? '' : \"Must be a number between 0 and 30\";\n        if (value === \"\") errors.reps = \"\";\n        break;\n\n      case \"sets\":\n        errors.sets = !isNaN(value) && 0 < value && value < 10 ? '' : \"Must be a number between 0 and 10\";\n        if (value === \"\") errors.sets = \"\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WorkoutList\",\n    children: workouts && workouts.map(workout => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"WorkoutElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: workout.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), workout.exercises.map(exercise => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: exercise.exercise_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Reps:\", exercise.reps]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Sets:\", exercise.sets]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary test\",\n                onClick: () => ExrEditForm(workout, exercise),\n                children: \" Edit Exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger test\",\n                onClick: () => deleteExcr(workout, exercise),\n                children: \" Delete exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 41\n              }, this), showEditForm && exercise.exercise_name === exerciseEdit.exercise && workout.title === exerciseEdit.workout && /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => UpdateExercise(e, workout, exercise.exercise_name),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Reps:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"reps\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 41\n                  }, this), errors.reps.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error\",\n                    children: errors.reps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 68\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Sets:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"sets\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 41\n                  }, this), errors.sets.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error\",\n                    children: errors.sets\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 68\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"submit\",\n                    value: \"Change\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this)\n          }, exercise.exercise_name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this);\n        }), showAddForm && workout.title === chosenWorkout && /*#__PURE__*/_jsxDEV(ExerciseForm, {\n          addEx: addNewEx,\n          workout: workout,\n          showAddForm: setShowAddForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => ExrAddForm(workout),\n              children: \"Add new exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteBtn(workout),\n              children: \" Delete workout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)]\n      }, workout.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkoutList, \"0Syv0ISJssUjZHxaEjiRNw74kJ4=\", false, function () {\n  return [useCookies];\n});\n\n_c = WorkoutList;\nexport default WorkoutList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutList\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js"],"names":["APIService","React","useState","useEffect","ExerciseForm","useCookies","WorkoutList","props","exercise","SetExercise","exercise_name","reps","sets","token","chosenWorkout","setchosenWorkout","exerciseEdit","workout","showAddForm","setShowAddForm","showEditForm","setShowEditForm","errors","workouts","setWorkouts","ExrAddForm","title","ExrEditForm","deleteBtn","DeleteWorkout","id","then","window","location","reload","catch","error","console","log","addNewEx","tmp_workouts","forEach","myworkout","wtmp","exercises","push","UpdEx","index","findIndex","ex","dltEx","filter","exer","deleteExcr","DeleteExercise","UpdateExercise","event","name","preventDefault","length","handleChange","e","value","target","prevState","isNaN","map"],"mappings":"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","sourcesContent":["import APIService from '../APIService';\nimport React, {useState, useEffect} from 'react'\nimport ExerciseForm from './ExerciseForm';\nimport {useCookies} from 'react-cookie';\n\n\n\nfunction WorkoutList(props) {\n    \n    const [exercise, SetExercise] = useState({exercise_name:\"\", reps:\"\", sets:\"\"})\n    const [token] = useCookies(['mytoken'])\n    const [chosenWorkout,setchosenWorkout] =  useState(\"\")\n    const [exerciseEdit] = useState({workout:\"\",exercise:\"\"})\n    const [showAddForm, setShowAddForm] = useState(false)\n    const [showEditForm, setShowEditForm] = useState(false);\n    const [errors] = useState({reps:\"\",sets:\"\"})\n    const [workouts, setWorkouts] = useState([])\n \n\n    useEffect(() => {\n        setWorkouts(props.workouts)\n    }, [props.workouts])\n\n    const ExrAddForm = (workout) => {\n        setShowAddForm(!showAddForm);\n        setchosenWorkout(workout.title)\n    }\n\n\n    const ExrEditForm = (workout, exercise) => {\n        setShowEditForm(!showEditForm);\n        exerciseEdit.workout = workout.title\n        exerciseEdit.exercise = exercise.exercise_name\n        \n    }\n\n   \n    const deleteBtn = (workout) => {\n        APIService.DeleteWorkout(workout.id)\n        .then(window.location.reload())\n        .catch(error => console.log(error))\n    }\n\n    const addNewEx = (workout, exercise) => {\n        var tmp_workouts = []\n        workouts.forEach(myworkout => {\n            if(myworkout.id === workout){\n                const wtmp = myworkout\n                wtmp.exercises.push(exercise)\n                tmp_workouts.push(wtmp)\n            }\n            else{\n                tmp_workouts.push(myworkout)\n            }\n            })\n        setWorkouts(tmp_workouts)\n        \n    }\n\n    const UpdEx = (workout, exercise) => {\n        var tmp_workouts = []\n        workouts.forEach(myworkout => {\n            if(myworkout.id == workout.id){\n                const wtmp = myworkout\n                const index = wtmp.exercises.findIndex(\n                    (ex) => ex.exercise_name === exercise.exercise_name)\n                wtmp.exercises[index] = exercise\n                tmp_workouts.push(wtmp)\n            }\n            else{\n                tmp_workouts.push(myworkout)\n            }\n            })\n        setWorkouts(tmp_workouts)\n        \n    }\n\n    const dltEx = (exercise) => {\n        var tmp_workouts = []\n        workouts.forEach(workout => {\n            const wtmp = workout\n            wtmp.exercises = workout.exercises.filter(exer => {\n                if(exer.exercise_name === exercise.exercise_name) {\n                   return false\n                      }\n                  return true})\n        \n              tmp_workouts.push(wtmp)\n            })\n        setWorkouts(tmp_workouts)\n      }\n    \n\n    const deleteExcr = (workout, exercise) =>{\n        \n        APIService.DeleteExercise(workout.id, exercise, token['mytoken'])\n        .then(dltEx(exercise))\n        .catch(error => console.log(error))\n    }\n\n    const UpdateExercise = (event, workout, name) => {\n        event.preventDefault()\n        exercise.exercise_name = name\n        if(errors.reps.length ===  0 && errors.reps.length ===  0){\n            APIService.UpdateExercise(workout.id, exercise, token['mytoken'])\n            .then(UpdEx(workout,exercise))\n            .catch(error => console.log(error))\n        }\n      }\n    \n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        SetExercise(prevState => ({\n            ...prevState,\n            [name]:value\n        }))\n        switch(name){\n            case \"reps\":\n                errors.reps = \n                    !isNaN(value) && 0 < value && value < 30 ? '' : \"Must be a number between 0 and 30\"\n\n                if (value === \"\")\n                    errors.reps = \"\" \n                break\n\n            case \"sets\":\n                errors.sets = \n                    !isNaN(value) && 0 < value && value < 10 ? '' : \"Must be a number between 0 and 10\"\n                if (value === \"\")\n                    errors.sets = \"\" \n                break\n            default:\n                break\n        }\n    }\n\n\n\n    return (\n        <div className=\"WorkoutList\">\n          \n            {workouts && workouts.map(workout => {\n                return (\n                    <div className=\"WorkoutElement\" key = {workout.id}>\n                        <h3>{workout.title}</h3>\n                        {workout.exercises.map(exercise =>{\n                            return (\n                                \n                                <div key = {exercise.exercise_name}>\n                                    <div className = \"row\">\n                                        <div className = \"col\">\n                                            <h2>{exercise.exercise_name}</h2>\n                                          \n                                            <h2>Reps:{exercise.reps}</h2>\n                                            <h2>Sets:{exercise.sets}</h2>\n                                            \n                                        </div>\n                                     \n                                 \n                                        <button className = \"btn btn-primary test\" onClick  = {() => ExrEditForm(workout, exercise)}> Edit Exercise</button>\n                              \n                                        <button className = \"btn btn-danger test\" onClick  = {() => deleteExcr(workout,exercise)}> Delete exercise</button>\n                        \n                                    {showEditForm &&\n                                     (exercise.exercise_name === exerciseEdit.exercise) &&\n                                      (workout.title === exerciseEdit.workout) && \n\n                                    <form onSubmit={(e) => UpdateExercise(e,workout, exercise.exercise_name)}>\n                                        <div className=\"Row\">\n                                        <label>\n                                        Reps:\n                                        <input type=\"text\"  name=\"reps\"  onChange={handleChange}/>\n                                        </label>\n                                        {errors.reps.length > 0 && <span className='error'>{errors.reps}</span>}\n                                        <label>\n                                        Sets:\n                                        <input type=\"text\"  name=\"sets\" onChange={handleChange}/>\n                                        </label>\n                                        {errors.sets.length > 0 && <span className='error'>{errors.sets}</span>}\n                                        <input type=\"submit\" value=\"Change\" />\n                                        </div>\n                                       \n                                  </form>\n                                    } \n                                    </div>\n                                </div>\n                            )\n                        })\n\n                        }\n                        {showAddForm && (workout.title === chosenWorkout) &&\n                            <ExerciseForm addEx = {addNewEx} workout={workout} showAddForm={setShowAddForm}/>\n                        }\n\n                      \n                    \n                        <div className = \"row\">\n                            <div className = \"col-md-2\">\n                                <button className = \"btn btn-secondary\" onClick = {() => ExrAddForm(workout)} > \n                                                                        Add new exercise</button>\n                            </div>\n                            <div className = \"col-md-2\">\n                                <button className = \"btn btn-danger\" onClick  = {() => deleteBtn(workout)}> Delete workout</button>\n                            </div>\n                          \n\n                        </div>\n                    </div>\n                    )\n                }\n            )}\n           \n            </div> \n    )\n}\n\n\nexport default WorkoutList\n\n"]},"metadata":{},"sourceType":"module"}