{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/FinishedList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FinishedList() {\n  _s();\n\n  const [finished, setFinished] = useState([]);\n  const [plans, setPlans] = useState([]);\n  const [token] = useCookies(['mytoken']);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/finished-list', {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token['mytoken']}`\n      }\n    }).then(resp => resp.json()).then(resp => setFinished(resp));\n  }, []);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/plans-list', {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token['mytoken']}`\n      }\n    }).then(resp => resp.json()).then(resp => setPlans(resp));\n  }, []);\n  let value = finished.map(function (item) {\n    return item.progress;\n  });\n  const data = {\n    labels: ['01', '02', '03', '04', '05', '06'],\n    datasets: [{\n      label: 'X',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)'],\n      borderWidth: 1\n    }]\n  };\n  console.log(value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      type: 'line',\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FinishedList, \"Hi4JlFfMQuvVPH8cCSlHx1Nvb9s=\", false, function () {\n  return [useCookies];\n});\n\n_c = FinishedList;\nexport default FinishedList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinishedList\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/FinishedList.js"],"names":["React","useState","useEffect","useCookies","Line","FinishedList","finished","setFinished","plans","setPlans","token","fetch","headers","then","resp","json","value","map","item","progress","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,KAAD,IAAUP,UAAU,CAAC,CAAC,SAAD,CAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAC,qCAAD,EAAwC;AAC3C,gBAAS,KADkC;AAE3CC,MAAAA,OAAO,EAAE;AACP,wBAAe,kBADR;AAEP,yBAAiB,SAAQF,KAAK,CAAC,SAAD,CAAY;AAFnC;AAFkC,KAAxC,CAAL,CAOCG,IAPD,CAOMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPd,EAQCF,IARD,CAQMC,IAAI,IAAIP,WAAW,CAACO,IAAD,CARzB;AAUD,GAXM,EAWJ,EAXI,CAAT;AAaEZ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AAC5C,gBAAS,KADmC;AAE5CC,MAAAA,OAAO,EAAE;AACP,wBAAe,kBADR;AAEP,yBAAiB,SAAQF,KAAK,CAAC,SAAD,CAAY;AAFnC;AAFmC,KAArC,CAAL,CAQHG,IARG,CAQEC,IAAI,IAAIA,IAAI,CAACC,IAAL,EARV,EASHF,IATG,CASEC,IAAI,IAAIL,QAAQ,CAACK,IAAD,CATlB;AAWH,GAZU,EAYR,EAZQ,CAAT;AAcF,MAAIE,KAAK,GAAGV,QAAQ,CAACW,GAAT,CAAa,UAASC,IAAT,EAAc;AACrC,WAAOA,IAAI,CAACC,QAAZ;AACD,GAFW,CAAZ;AAGA,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CADG;AAEXC,IAAAA,QAAQ,EAAE,CAAC;AACPC,MAAAA,KAAK,EAAE,GADA;AAEPH,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFC;AAGPI,MAAAA,eAAe,EAAE,CACb,yBADa,CAHV;AAOPC,MAAAA,WAAW,EAAE,CACT,uBADS,CAPN;AAWPC,MAAAA,WAAW,EAAE;AAXN,KAAD;AAFC,GAAb;AAiBAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AAEA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE,MAAZ;AAAmB,MAAA,IAAI,EAAEI;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA5DQf,Y;UAIWF,U;;;KAJXE,Y;AA8DT,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useCookies} from 'react-cookie';\nimport {Line} from 'react-chartjs-2'\n\nfunction FinishedList() {\n\n    const [finished, setFinished] = useState([])\n    const [plans, setPlans] = useState([])\n    const [token] = useCookies(['mytoken'])\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/finished-list', {\n          'method':'GET',\n          headers: {\n            'Content-Type':'application/json',\n            'Authorization':`Token ${token['mytoken']}` \n        }\n        })\n        .then(resp => resp.json())\n        .then(resp => setFinished(resp))\n    \n      }, [])\n\n      useEffect(() => {\n        fetch('http://127.0.0.1:8000/plans-list', {\n      'method':'GET',\n      headers: {\n        'Content-Type':'application/json',\n        'Authorization':`Token ${token['mytoken']}`,\n\n      }\n    })\n    .then(resp => resp.json())\n    .then(resp => setPlans(resp))\n   \n    }, [])\n\n    let value = finished.map(function(item){\n      return item.progress;\n    })\n    const data = {\n      labels: ['01', '02', '03', '04', '05', '06'],\n      datasets: [{\n          label: 'X',\n          data: [12, 19, 3, 5, 2, 3],\n          backgroundColor: [\n              'rgba(255, 99, 132, 0.2)'\n\n          ],\n          borderColor: [\n              'rgba(255, 99, 132, 1)'\n\n          ],\n          borderWidth: 1\n      }]\n    }\n\n    console.log(value)\n    \n    return (\n        <div>\n            <Line type={'line'}data={data}/>\n        </div>\n    )\n}\n\nexport default FinishedList\n"]},"metadata":{},"sourceType":"module"}