{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport APIService from '../APIService';\nimport React, { useState, useEffect } from 'react';\nimport Form from './Form';\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkoutList(props) {\n  _s();\n\n  const [exercise, SetExercise] = useState({\n    reps: \"\",\n    sets: \"\"\n  });\n  const [token] = useCookies(['mytoken']);\n  const [showForm, setShowForm] = useState(false);\n\n  const ExrForm = () => {\n    setShowForm(!showForm);\n  };\n\n  const editBtn = workout => {\n    props.editBtn(workout);\n  };\n\n  const deleteBtn = workout => {\n    APIService.DeleteWorkout(workout.id).then(() => props.deleteBtn(workout)).catch(error => console.log(error));\n  };\n\n  const deleteExcr = (workout, exercise) => {\n    console.log(\"TEST\", exercise);\n    APIService.DeleteExercise(workout.id, exercise, token['mytoken']).then(window.location.reload()).catch(error => console.log(error));\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setExercise(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WorkoutList\",\n    children: props.workouts && props.workouts.map(workout => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: workout.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), workout.exercises.map(exercise => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: exercise.exercise_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-1\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: ExrForm,\n                  children: \" Edit Exercise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => deleteExcr(workout, exercise),\n                  children: \" Delete exercise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Reps:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: exercise.reps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Sets:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: exercise.reps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Change\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this)\n          }, exercise.exercise_name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-1\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => editBtn(workout),\n              children: \" Add Exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteBtn(workout),\n              children: \" Delete workout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, workout.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkoutList, \"tmUeD2uqo6OA0W5HMZ+rwNcBUtA=\", false, function () {\n  return [useCookies];\n});\n\n_c = WorkoutList;\nWorkoutList.propTypes = {// workouts: []\n};\nexport default WorkoutList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutList\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js"],"names":["PropTypes","APIService","React","useState","useEffect","Form","useCookies","WorkoutList","props","exercise","SetExercise","reps","sets","token","showForm","setShowForm","ExrForm","editBtn","workout","deleteBtn","DeleteWorkout","id","then","catch","error","console","log","deleteExcr","DeleteExercise","window","location","reload","handleChange","e","name","value","target","setExercise","prevState","workouts","map","title","exercises","exercise_name","propTypes"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport APIService from '../APIService';\nimport React, {useState, useEffect} from 'react'\nimport Form from './Form';\nimport {useCookies} from 'react-cookie';\n\nfunction WorkoutList(props) {\n    \n    const [exercise, SetExercise] = useState({reps:\"\",sets:\"\"})\n    const [token] = useCookies(['mytoken'])\n\n    const [showForm, setShowForm] = useState(false);\n\n    const ExrForm = () => {\n        setShowForm(!showForm);\n      }\n    \n\n    const editBtn = (workout) =>{\n        props.editBtn(workout)\n    }\n\n\n    const deleteBtn = (workout) => {\n        APIService.DeleteWorkout(workout.id)\n        .then(() => props.deleteBtn(workout))\n        .catch(error => console.log(error))\n       \n    }\n\n\n    const deleteExcr = (workout, exercise) =>{\n        \n        console.log(\"TEST\", exercise)\n        APIService.DeleteExercise(workout.id, exercise, token['mytoken'])\n        .then(window.location.reload())\n        .catch(error => console.log(error))\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setExercise(prevState => ({\n            ...prevState,\n            [name]:value\n        }))\n    }\n  \n\n    return (\n        <div className=\"WorkoutList\">\n            {props.workouts && props.workouts.map(workout => {\n                return (\n                    <div key = {workout.id}>\n                        <h3>{workout.title}</h3>\n                        {workout.exercises.map(exercise =>{\n                            return (\n                                \n                                <div key = {exercise.exercise_name}>\n                                    <div className = \"row\">\n                                        <h2>{exercise.exercise_name}</h2>\n                                    \n                                    <div className = \"col-md-1\">\n                                        <button className = \"btn btn-primary\" onClick  = {ExrForm}> Edit Exercise</button>\n                                    </div>\n                                    <div className = \"col-md-2\">\n                                        <button className = \"btn btn-danger\" onClick  = {() => deleteExcr(workout,exercise)}> Delete exercise</button>\n                                    </div>\n                                    {showForm &&\n                                    <form>\n                                        <label>\n                                        Reps:\n                                        <input type=\"text\" value={exercise.reps} />\n                                        </label>\n                                        <label>\n                                        Sets:\n                                        <input type=\"text\" value={exercise.reps} />\n                                        </label>\n                                        <input type=\"submit\" value=\"Change\" />\n                                       \n                                  </form>\n                                    } \n                                    </div>\n                                </div>\n                            )\n                        })\n\n                        }\n                    \n                        <div className = \"row\">\n                            <div className = \"col-md-1\">\n                                <button className = \"btn btn-primary\" onClick  = {() => editBtn(workout)}> Add Exercise</button>\n                            </div>\n                            {/* <div className = \"col-md-2\">\n                                <button className = \"btn btn-success\" onClick  = {() => editBtn(workout)}> Add new exercise</button>\n                            </div> */}\n                            <div className = \"col-md-2\">\n                                <button className = \"btn btn-danger\" onClick  = {() => deleteBtn(workout)}> Delete workout</button>\n                            </div>\n\n                        </div>\n                    </div>\n                    )\n                }\n            )}\n           \n            </div> \n    )\n}\n\nWorkoutList.propTypes = {\n    // workouts: []\n}\n\nexport default WorkoutList\n\n"]},"metadata":{},"sourceType":"module"}