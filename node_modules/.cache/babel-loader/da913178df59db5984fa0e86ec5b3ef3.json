{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/ExerciseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport APIService from '../APIService';\nimport Select from 'react-select';\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExerciseForm(props) {\n  _s();\n\n  const [all_exercises, SetAllExercises] = useState([]);\n  const [exercises, setExercises] = useState({\n    exercise_name: \"\",\n    reps: \"\",\n    sets: \"\"\n  });\n  const [token] = useCookies(['mytoken']);\n  const [errors] = useState({\n    reps: \"\",\n    sets: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setExercises(prevState => ({ ...prevState,\n      [name]: value\n    }));\n\n    switch (name) {\n      case \"reps\":\n        errors.reps = !isNaN(value) && 0 < value && value < 30 ? '' : \"Must be a number between 0 and 30\";\n        if (value === \"\") errors.reps = \"\";\n        break;\n\n      case \"sets\":\n        errors.sets = !isNaN(value) && 0 < value && value < 10 ? '' : \"Must be a number between 0 and 10\";\n        if (value === \"\") errors.sets = \"\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/api/exercise-list', {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(resp => SetAllExercises(resp));\n  }, []);\n  let all_names = all_exercises.map(function (item) {\n    return {\n      value: item.exercise_name\n    };\n  });\n\n  const AddExercise = e => {\n    e.preventDefault();\n    APIService.AddExercise(props.workout.id, exercises, token['mytoken']).then(props.addEx(props.workout.id, exercises)).then(props.showAddForm(false)).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"exercises\",\n      className: \"form-label\",\n      children: \"Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: all_names,\n      getOptionLabel: options => options[\"value\"],\n      getOptionValue: options => options['value'],\n      name: \"exercise_name\",\n      onChange: e => {\n        setExercises(prevState => ({ ...prevState,\n          [\"exercise_name\"]: e.value\n        }));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: exercises.reps,\n        onChange: handleChange,\n        name: \"reps\",\n        placeholder: \"Number of reps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), errors.reps.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.reps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: exercises.sets,\n        onChange: handleChange,\n        name: \"sets\",\n        placeholder: \"Number of sets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), errors.sets.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.sets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddExercise,\n      className: \"btn btn-success\",\n      children: \"Update Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ExerciseForm, \"1DMD1q5L6sGFG5sAMyMdjVu+iic=\", false, function () {\n  return [useCookies];\n});\n\n_c = ExerciseForm;\nexport default ExerciseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseForm\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/ExerciseForm.js"],"names":["React","useState","useEffect","APIService","Select","useCookies","ExerciseForm","props","all_exercises","SetAllExercises","exercises","setExercises","exercise_name","reps","sets","token","errors","handleChange","e","name","value","target","prevState","isNaN","fetch","headers","then","resp","json","all_names","map","item","AddExercise","preventDefault","workout","id","addEx","showAddForm","catch","error","console","log","options","length"],"mappings":"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","sourcesContent":["\n\nimport React, {useState, useEffect} from 'react'\nimport APIService from '../APIService'\nimport Select from 'react-select'\nimport {useCookies} from 'react-cookie';\n\n\n\n\nfunction ExerciseForm(props) {\n    const [all_exercises, SetAllExercises] = useState([])\n    const [exercises, setExercises] = useState({exercise_name:\"\",reps:\"\",sets:\"\"})\n    const [token] = useCookies(['mytoken'])\n    const [errors] = useState({reps:\"\",sets:\"\"})\n\n    const handleChange = e => {\n\n        const {name, value} = e.target;\n        setExercises(prevState => ({\n            ...prevState,\n            [name]:value\n        }))\n\n     \n\n        switch(name){\n            case \"reps\":\n                errors.reps = \n                    !isNaN(value) && 0 < value && value < 30 ? '' : \"Must be a number between 0 and 30\"\n\n                if (value === \"\")\n                    errors.reps = \"\" \n                break\n\n            case \"sets\":\n                errors.sets = \n                    !isNaN(value) && 0 < value && value < 10 ? '' : \"Must be a number between 0 and 10\"\n                if (value === \"\")\n                    errors.sets = \"\" \n                break\n            default:\n                break\n        }\n\n    }\n    \n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/api/api/exercise-list', {\n        'method':'GET',\n        headers: {\n            'Content-Type':'application/json',\n            }\n            })\n        .then(resp => resp.json())\n        .then(resp => SetAllExercises(resp))\n    }, [])\n\n   \n    \n    let all_names = all_exercises.map(function(item){\n        return {value:item.exercise_name};\n    })\n\n\n    const AddExercise = (e) => {    \n            e.preventDefault()  \n            APIService.AddExercise(props.workout.id,exercises,token['mytoken'])\n            .then(props.addEx(props.workout.id, exercises))    \n            .then(props.showAddForm(false))\n            .catch(error => console.log(error))\n    }\n    \n    return (\n        <form>\n                \n            <label htmlFor = \"exercises\" className = \"form-label\">Exercises</label>\n            <Select options={all_names} \n                getOptionLabel={options => options[\"value\"]}\n                getOptionValue={(options) => options['value']} \n                name=\"exercise_name\"\n                onChange= {(e) => {\n                    setExercises(prevState => ({\n                        ...prevState,\n                        [\"exercise_name\"]:e.value}))}}/>\n            \n            <div className =\"Row\" >\n                <input type=\"text\" value={exercises.reps} onChange= {handleChange} name=\"reps\" placeholder = \"Number of reps\"/>\n                {errors.reps.length > 0 && <span className='error'>{errors.reps}</span>}\n                <input type=\"text\" value={exercises.sets} onChange= {handleChange} name=\"sets\" placeholder = \"Number of sets\"/>\n                {errors.sets.length > 0 && <span className='error'>{errors.sets}</span>}\n            </div>\n            <button onClick = {AddExercise} className = \"btn btn-success\">Update Workout</button>\n            <br/>\n            \n        </form>\n    )\n                   \n}\n\nexport default ExerciseForm\n"]},"metadata":{},"sourceType":"module"}