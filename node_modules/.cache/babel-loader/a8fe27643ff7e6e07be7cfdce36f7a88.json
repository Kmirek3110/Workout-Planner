{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/ExerciseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport APIService from '../APIService';\nimport Select from 'react-select';\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExerciseForm(props) {\n  _s();\n\n  const [all_exercises, SetAllExercises] = useState([]);\n  const [exercises, setExercises] = useState({\n    exercise_name: \"\",\n    reps: \"\",\n    sets: \"\"\n  });\n  const [token] = useCookies(['mytoken']);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setExercises(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/exercise-list', {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(resp => SetAllExercises(resp));\n  }, []);\n  let all_names = all_exercises.map(function (item) {\n    return {\n      value: item.exercise_name,\n      label: item.exercise_name\n    };\n  });\n\n  const AddExercise = () => {\n    APIService.AddExercise(props.workout.id, exercises, token['mytoken']).then(window.location.reload()).catch(error => console.log(error));\n  };\n\n  console.log(\"allnaeas\", all_names);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"exercises\",\n      className: \"form-label\",\n      children: \"Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: all_names,\n      getOptionLabel: options => options,\n      value: exercises.exercise_name,\n      name: \"exercise_name\",\n      onChange: e => {\n        setExercises(prevState => ({ ...prevState,\n          [\"exercise_name\"]: e\n        }));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: exercises.reps,\n      onChange: handleChange,\n      name: \"reps\",\n      placeholder: \"Number of reps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: exercises.sets,\n      onChange: handleChange,\n      name: \"sets\",\n      placeholder: \"Number of sets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddExercise,\n      className: \"btn btn-success\",\n      children: \"Update Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ExerciseForm, \"MiemYZHeYldtrDw06FMaDLHmwyY=\", false, function () {\n  return [useCookies];\n});\n\n_c = ExerciseForm;\nexport default ExerciseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseForm\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/ExerciseForm.js"],"names":["React","useState","useEffect","APIService","Select","useCookies","ExerciseForm","props","all_exercises","SetAllExercises","exercises","setExercises","exercise_name","reps","sets","token","handleChange","e","name","value","target","prevState","fetch","headers","then","resp","json","all_names","map","item","label","AddExercise","workout","id","window","location","reload","catch","error","console","log","options"],"mappings":"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","sourcesContent":["\n\nimport React, {useState, useEffect} from 'react'\nimport APIService from '../APIService'\nimport Select from 'react-select'\nimport {useCookies} from 'react-cookie';\n\n\n\n\nfunction ExerciseForm(props) {\n    const [all_exercises, SetAllExercises] = useState([])\n    const [exercises, setExercises] = useState({exercise_name:\"\",reps:\"\",sets:\"\"})\n    const [token] = useCookies(['mytoken'])\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setExercises(prevState => ({\n            ...prevState,\n            [name]:value\n        }))\n    }\n    \n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/exercise-list', {\n        'method':'GET',\n        headers: {\n            'Content-Type':'application/json',\n            }\n            })\n        .then(resp => resp.json())\n        .then(resp => SetAllExercises(resp))\n    }, [])\n    \n    let all_names = all_exercises.map(function(item){\n        return {value:item.exercise_name, label:item.exercise_name};\n    })\n\n    const AddExercise = () => {\n        APIService.AddExercise(props.workout.id,exercises,token['mytoken'])\n        .then(window.location.reload())\n        .catch(error => console.log(error))\n    }\n    console.log(\"allnaeas\",all_names)\n    return (\n        <form>\n            \n           \n            <label htmlFor = \"exercises\" className = \"form-label\">Exercises</label>\n            <Select options={all_names} getOptionLabel={options => options} value={exercises.exercise_name}  name=\"exercise_name\" onChange= {(e) => {\n\n            setExercises(prevState => ({\n                ...prevState,\n                [\"exercise_name\"]:e\n                }))\n            }}/>\n\n            {/* <br/>\n            <label htmlFor = \"reps\" className = \"form-label\">Reps</label>\n            <br/> */}\n            <input type=\"text\" value={exercises.reps} onChange= {handleChange} name=\"reps\" placeholder = \"Number of reps\"/>\n\n            {/* {\n            <label htmlFor = \"sets\" className = \"form-label\">Sets</label>\n            <br/> */} \n             <br/>\n             \n            <input type=\"text\" value={exercises.sets} onChange= {handleChange} name=\"sets\" placeholder = \"Number of sets\"/>\n                    <button onClick = {AddExercise} className = \"btn btn-success\">Update Workout</button>\n        </form>\n    )\n                   \n}\n\nexport default ExerciseForm\n"]},"metadata":{},"sourceType":"module"}