{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport APIService from '../APIService';\nimport Select from 'react-select';\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkoutForm(props) {\n  _s();\n\n  const [title, SetWorkouttitle] = useState('');\n  const [all_exercises, SetAllExercises] = useState([]);\n  const [exercises, setExercises] = useState({\n    exercise_name: \"\",\n    reps: \"\",\n    sets: \"\"\n  });\n  const [token] = useCookies(['mytoken']);\n\n  const handleChange = e => {\n    console.log(typeof e);\n    console.log(\"Drukujemy e \", e);\n    const {\n      name,\n      value\n    } = e.target;\n    setExercises(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }; // const UpdateWorkout = () => {\n  //     APIService.UpdateWorkout(props.workout.id, {title, exercises}, token['mytoken'])\n  //     .then(resp => props.updatedInformation(resp))\n  // }\n  // const AddExercise = () => {\n  //     APIService.AddExercise(props.workout.id,  exercises, token['mytoken'])\n  //     .then(resp => props.updatedInformation(resp))\n  // }\n  // const InsertWorkout = () => {\n  //     APIService.CreateWorkout({title},token['mytoken'])\n  //     .then(resp => props.insertedInformation(resp))\n  // }\n\n\n  const insertExercise = exercise => {\n    const new_exercises = [...exercises, exercise];\n    setExercises(new_exercises);\n  };\n\n  useEffect(() => {\n    SetWorkouttitle(props.workout.title);\n    setExercises(props.workout.exercises);\n  }, [props.workout]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/exercise-list', {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(resp => SetAllExercises(resp));\n  }, []);\n  let all_names = all_exercises.map(function (item) {\n    return item.exercise_name;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.workout ?\n    /*#__PURE__*/\n    //    \n    _jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        className: \"form-label\",\n        children: props.workout.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"title\",\n        placeholder: \"Please enter workout name\",\n        value: title,\n        onChange: e => SetWorkouttitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.workout.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this), props.workout.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exercises\",\n          className: \"form-label\",\n          children: \"Exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          options: all_names,\n          value: exercises.exercise_name,\n          name: \"exercise_name\",\n          onChange: e => {\n            console.log(e);\n            setExercises(prevState => ({ ...prevState,\n              [\"exercise_name\"]: e\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), exercises.exercise_name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"reps\",\n          className: \"form-label\",\n          children: \"Reps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: exercises.reps,\n          onChange: handleChange,\n          name: \"reps\",\n          placeholder: \"Number of reps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sets\",\n          className: \"form-label\",\n          children: \"Sets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: exercises.sets,\n          onChange: handleChange,\n          name: \"sets\",\n          placeholder: \"Number of sets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: AddExercise,\n          className: \"btn btn-success\",\n          children: \"Update Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: InsertWorkout,\n        className: \"btn btn-success\",\n        children: \"Create new workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkoutForm, \"JDAeGt14dFnKVeqZ0gTIcRotCqg=\", false, function () {\n  return [useCookies];\n});\n\n_c = WorkoutForm;\nexport default WorkoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutForm\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutForm.js"],"names":["React","useState","useEffect","APIService","Select","useCookies","WorkoutForm","props","title","SetWorkouttitle","all_exercises","SetAllExercises","exercises","setExercises","exercise_name","reps","sets","token","handleChange","e","console","log","name","value","target","prevState","insertExercise","exercise","new_exercises","workout","fetch","headers","then","resp","json","all_names","map","item","id","AddExercise","InsertWorkout"],"mappings":"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","sourcesContent":["\n\nimport React, {useState, useEffect} from 'react'\nimport APIService from '../APIService'\nimport Select from 'react-select'\nimport {useCookies} from 'react-cookie';\n\n\n\n\nfunction WorkoutForm(props) {\n    const [title, SetWorkouttitle] = useState('')\n    const [all_exercises, SetAllExercises] = useState([])\n    const [exercises, setExercises] = useState({exercise_name:\"\",reps:\"\",sets:\"\"})\n    const [token] = useCookies(['mytoken'])\n\n    const handleChange = e => {\n        console.log(typeof(e))\n        console.log(\"Drukujemy e \",e)\n        const {name, value} = e.target;\n        setExercises(prevState => ({\n            ...prevState,\n            [name]:value\n        }))\n    }\n    \n    // const UpdateWorkout = () => {\n    //     APIService.UpdateWorkout(props.workout.id, {title, exercises}, token['mytoken'])\n    //     .then(resp => props.updatedInformation(resp))\n    // }\n\n    // const AddExercise = () => {\n    //     APIService.AddExercise(props.workout.id,  exercises, token['mytoken'])\n    //     .then(resp => props.updatedInformation(resp))\n    // }\n\n    // const InsertWorkout = () => {\n    //     APIService.CreateWorkout({title},token['mytoken'])\n    //     .then(resp => props.insertedInformation(resp))\n    // }\n\n    const insertExercise = (exercise) => {\n        const new_exercises= [...exercises, exercise]\n        setExercises(new_exercises)\n    \n    }\n\n\n    useEffect(() => {\n        SetWorkouttitle(props.workout.title)\n        setExercises(props.workout.exercises)\n    }, [props.workout])\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/exercise-list', {\n        'method':'GET',\n        headers: {\n            'Content-Type':'application/json',\n            }\n            })\n        .then(resp => resp.json())\n        .then(resp => SetAllExercises(resp))\n    }, [])\n    \n    let all_names = all_exercises.map(function(item){\n        return item.exercise_name;\n    })\n\n    return (\n        <div>\n            \n            {props.workout ? (\n            //    \n            <div className = \"mb-3\">\n               <label htmlFor = \"title\" className = \"form-label\">{props.workout.name}</label>\n               <input type=\"text\" className = \"form-control\" id=\"title\" placeholder = \"Please enter workout name\"\n               value = {title} onChange = {e => SetWorkouttitle(e.target.value)}></input>\n            <h1>{props.workout.title}</h1>\n              \n               <br/>\n               {     props.workout.id ? \n                    <div>\n                        <label htmlFor = \"exercises\" className = \"form-label\">Exercises</label>\n                        <Select options={all_names} value={exercises.exercise_name} name=\"exercise_name\" onChange= {(e) => {\n                console.log(e)\n               setExercises(prevState => ({\n                ...prevState,\n                [\"exercise_name\"]:e\n                }))\n               }\n            }/>\n            {exercises.exercise_name}\n\n               <br/>\n               <label htmlFor = \"reps\" className = \"form-label\">Reps</label>\n               <br/>\n               <input type=\"text\" value={exercises.reps} onChange= {handleChange} name=\"reps\" placeholder = \"Number of reps\"/>\n\n               <br/>\n               <label htmlFor = \"sets\" className = \"form-label\">Sets</label>\n               <br/>\n               <input type=\"text\" value={exercises.sets} onChange= {handleChange} name=\"sets\" placeholder = \"Number of sets\"/>\n                        <button onClick = {AddExercise} className = \"btn btn-success\">Update Workout</button>\n                    </div>\n                    :\n                    <button onClick = {InsertWorkout} className = \"btn btn-success\">Create new workout</button>\n                }\n               \n               </div>            \n            ):null}\n            {\n\n            }\n            \n        </div>\n    )\n}\n\nexport default WorkoutForm\n"]},"metadata":{},"sourceType":"module"}