{"ast":null,"code":"export default class APIService {\n  static CreateWorkout(body) {\n    console.log(\"Kreacja\", body);\n    return fetch(`http://127.0.0.1:8000/workout-create`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static UpdateWorkout(workout_id, body, exercises) {\n    console.log(\"Updatowanie\", workout_id, body);\n    console.log(\"Przy updatowaniu exercises\", exercises);\n    return fetch(`http://127.0.0.1:8000/workout-update/${workout_id}/`, {\n      'method': 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static AddExercise(workout_id, body) {\n    console.log(\"Przy dodawaniu exercises\", body);\n    return fetch(`http://127.0.0.1:8000/workout-add-exercise/${workout_id}/`, {\n      'method': 'POSTT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static DeleteWorkout(workout_id) {\n    console.log(\"Usuwanie\", workout_id);\n    return fetch(`http://127.0.0.1:8000/workout-delete/${workout_id}/`, {\n      'method': 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  static LoginUser(body) {\n    return fetch('http://127.0.0.1:8000/auth/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static RegisterUser(body) {\n    return fetch('http://127.0.0.1:8000/users', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n}","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/APIService.js"],"names":["APIService","CreateWorkout","body","console","log","fetch","headers","JSON","stringify","then","resp","json","UpdateWorkout","workout_id","exercises","AddExercise","DeleteWorkout","LoginUser","RegisterUser"],"mappings":"AACA,eAAe,MAAMA,UAAN,CAAgB;AACP,SAAbC,aAAa,CAACC,IAAD,EAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AACA,WAAOG,KAAK,CAAE,sCAAF,EAAyC;AACjD,gBAAS,MADwC;AAEjDC,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV,OAFwC;AAKjDJ,MAAAA,IAAI,EAACK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAL4C,KAAzC,CAAL,CAOJO,IAPI,CAOCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPT,CAAP;AAQH;;AAEmB,SAAbC,aAAa,CAACC,UAAD,EAAaX,IAAb,EAAmBY,SAAnB,EAA6B;AAC7CX,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BS,UAA1B,EAAsCX,IAAtC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCU,SAAzC;AACA,WAAOT,KAAK,CAAE,wCAAuCQ,UAAW,GAApD,EAAwD;AAChE,gBAAS,KADuD;AAEhEP,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV,OAFuD;AAKhEJ,MAAAA,IAAI,EAACK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAL2D,KAAxD,CAAL,CAQJO,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,CAAP;AASH;;AAEiB,SAAXI,WAAW,CAACF,UAAD,EAAaX,IAAb,EAAkB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCF,IAAvC;AACA,WAAOG,KAAK,CAAE,8CAA6CQ,UAAW,GAA1D,EAA8D;AACtE,gBAAS,OAD6D;AAEtEP,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV,OAF6D;AAKtEJ,MAAAA,IAAI,EAACK,IAAI,CAACC,SAAL,CAAeN,IAAf;AALiE,KAA9D,CAAL,CAQJO,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,CAAP;AASH;;AAEmB,SAAbK,aAAa,CAACH,UAAD,EAAY;AAC5BV,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBS,UAAvB;AACA,WAAOR,KAAK,CAAE,wCAAuCQ,UAAW,GAApD,EAAwD;AAChE,gBAAS,QADuD;AAEhEP,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV;AAFuD,KAAxD,CAAZ;AAMH;;AACe,SAATW,SAAS,CAACf,IAAD,EAAO;AAEnB,WAAOG,KAAK,CAAC,6BAAD,EAAgC;AAC1C,gBAAS,MADiC;AAE1CC,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV,OAFiC;AAMxCJ,MAAAA,IAAI,EAACK,IAAI,CAACC,SAAL,CAAeN,IAAf;AANmC,KAAhC,CAAL,CAQJO,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,CAAP;AAUD;;AAGkB,SAAZO,YAAY,CAAChB,IAAD,EAAO;AAExB,WAAOG,KAAK,CAAC,6BAAD,EAAgC;AAC1C,gBAAS,MADiC;AAE1CC,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV,OAFiC;AAMxCJ,MAAAA,IAAI,EAACK,IAAI,CAACC,SAAL,CAAeN,IAAf;AANmC,KAAhC,CAAL,CAQJO,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,CAAP;AAUD;;AA5EwB","sourcesContent":["\nexport default class APIService{\n    static CreateWorkout(body){\n        console.log(\"Kreacja\", body)\n        return fetch(`http://127.0.0.1:8000/workout-create`, {\n            'method':'POST',\n            headers: {\n                'Content-Type':'application/json',\n            }, \n            body:JSON.stringify(body)\n\n        }).then(resp => resp.json())\n    }\n\n    static UpdateWorkout(workout_id, body, exercises){\n        console.log(\"Updatowanie\",workout_id, body)\n        console.log(\"Przy updatowaniu exercises\",exercises)\n        return fetch(`http://127.0.0.1:8000/workout-update/${workout_id}/`, {\n            'method':'PUT',\n            headers: {\n                'Content-Type':'application/json',\n            }, \n            body:JSON.stringify(body)\n           \n\n        }).then(resp => resp.json())\n    }\n\n    static AddExercise(workout_id, body){\n        console.log(\"Przy dodawaniu exercises\",body)\n        return fetch(`http://127.0.0.1:8000/workout-add-exercise/${workout_id}/`, {\n            'method':'POSTT',\n            headers: {\n                'Content-Type':'application/json',\n            }, \n            body:JSON.stringify(body)\n           \n\n        }).then(resp => resp.json())\n    }\n\n    static DeleteWorkout(workout_id){\n        console.log(\"Usuwanie\",workout_id)\n        return fetch(`http://127.0.0.1:8000/workout-delete/${workout_id}/`, {\n            'method':'DELETE',\n            headers: {\n                'Content-Type':'application/json',\n            }\n        })\n    }\n    static LoginUser(body) {\n\n        return fetch('http://127.0.0.1:8000/auth/', {\n          'method':'POST',\n          headers: {\n              'Content-Type':'application/json',\n              \n            }, \n            body:JSON.stringify(body)\n  \n        }).then(resp => resp.json())\n  \n      }\n  \n  \n      static RegisterUser(body) {\n  \n        return fetch('http://127.0.0.1:8000/users', {\n          'method':'POST',\n          headers: {\n              'Content-Type':'application/json',\n              \n            }, \n            body:JSON.stringify(body)\n  \n        }).then(resp => resp.json())\n  \n      }\n}"]},"metadata":{},"sourceType":"module"}