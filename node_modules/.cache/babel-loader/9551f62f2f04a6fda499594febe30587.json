{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/PlanList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FlatList, StyleSheet, Text, View } from 'react-native';\nimport WorkoutList from './WorkoutList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlanList(props) {\n  _s();\n\n  const [editWorkout, setEditWorkout] = useState(null);\n  console.log(props.plans); // console.log(\"TOKENIZACJA\",token['mytoken'])\n\n  const editBtn = workout => {\n    setEditWorkout(workout);\n  };\n\n  const updatedInformation = workout => {\n    const new_workout = workouts.map(myworkout => {\n      if (myworkout.id === workout.id) {\n        return workout;\n      } else {\n        return myworkout;\n      }\n    });\n    setWorkouts(new_workout);\n  };\n\n  const insertedInformation = workout => {\n    const new_workouts = [...workouts, workout];\n    setWorkouts(new_workouts);\n  };\n\n  const deleteBtn = workout => {\n    const new_workouts = workouts.filter(myworkout => {\n      if (myworkout.id === workout.id) {\n        return false;\n      }\n\n      return true;\n    });\n    setWorkouts(new_workouts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.plans && props.plans.map(plan => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(WorkoutList, {\n          workouts: plan.workouts,\n          editBtn: editBtn,\n          deleteBtn: deleteBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: WorkoutForm,\n          className: \"btn btn-primary\",\n          children: \"Insert Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(WorkoutList, {\n          workouts: workouts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), editWorkout ? /*#__PURE__*/_jsxDEV(Form, {\n          workout: editWorkout,\n          updatedInformation: updatedInformation,\n          insertedInformation: insertedInformation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlanList, \"I+Qn9FfgpHUvCrr/3XlFJ2l8A/U=\");\n\n_c = PlanList;\nPlanList.propTypes = {};\nexport default PlanList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanList\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/PlanList.js"],"names":["React","PropTypes","FlatList","StyleSheet","Text","View","WorkoutList","PlanList","props","editWorkout","setEditWorkout","useState","console","log","plans","editBtn","workout","updatedInformation","new_workout","workouts","map","myworkout","id","setWorkouts","insertedInformation","new_workouts","deleteBtn","filter","plan","WorkoutForm","propTypes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,IAA/B,EAAqCC,IAArC,QAAiD,cAAjD;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAGrB,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BC,QAAQ,CAAC,IAAD,CAA7C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,KAAlB,EAJqB,CAKpB;;AAED,QAAMC,OAAO,GAAIC,OAAD,IAAa;AACzBN,IAAAA,cAAc,CAACM,OAAD,CAAd;AACH,GAFD;;AAIA,QAAMC,kBAAkB,GAAID,OAAD,IAAa;AACpC,UAAME,WAAW,GAAGC,QAAQ,CAACC,GAAT,CAAaC,SAAS,IAAI;AAC9C,UAAGA,SAAS,CAACC,EAAV,KAAiBN,OAAO,CAACM,EAA5B,EAAgC;AAC5B,eAAON,OAAP;AACH,OAFD,MAGK;AACD,eAAOK,SAAP;AACH;AACA,KAPmB,CAApB;AAQAE,IAAAA,WAAW,CAACL,WAAD,CAAX;AACH,GAVD;;AAYA,QAAMM,mBAAmB,GAAIR,OAAD,IAAa;AACrC,UAAMS,YAAY,GAAE,CAAC,GAAGN,QAAJ,EAAcH,OAAd,CAApB;AACAO,IAAAA,WAAW,CAACE,YAAD,CAAX;AAEH,GAJD;;AAMA,QAAMC,SAAS,GAAIV,OAAD,IAAa;AAC3B,UAAMS,YAAY,GAAGN,QAAQ,CAACQ,MAAT,CAAgBN,SAAS,IAAI;AAClD,UAAGA,SAAS,CAACC,EAAV,KAAiBN,OAAO,CAACM,EAA5B,EAAgC;AAC5B,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACC,KALoB,CAArB;AAOAC,IAAAA,WAAW,CAACE,YAAD,CAAX;AAEH,GAVD;;AAWA,sBACI;AAAA,cACCjB,KAAK,CAACM,KAAN,IAAeN,KAAK,CAACM,KAAN,CAAYM,GAAZ,CAAgBQ,IAAI,IAAI;AACpC,0BAAO;AAAA,gCACH,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAEA,IAAI,CAACT,QAA5B;AAAsC,UAAA,OAAO,EAAEJ,OAA/C;AAAwD,UAAA,SAAS,EAAEW;AAAnE;AAAA;AAAA;AAAA;AAAA,gBADG,eAEH;AAAQ,UAAA,OAAO,EAAIG,WAAnB;AAAgC,UAAA,SAAS,EAAG,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFG,eAGP,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAEV;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAHO,EAINV,WAAW,gBAAG,QAAC,IAAD;AAAM,UAAA,OAAO,EAAIA,WAAjB;AAA8B,UAAA,kBAAkB,EAAIQ,kBAApD;AAAwE,UAAA,mBAAmB,EAAIO;AAA/F;AAAA;AAAA;AAAA;AAAA,gBAAH,GAA2H,IAJhI;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AASH,KAVe;AADhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAvDQjB,Q;;KAAAA,Q;AAyDTA,QAAQ,CAACuB,SAAT,GAAqB,EAArB;AAIA,eAAevB,QAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FlatList, StyleSheet, Text, View } from 'react-native';\nimport WorkoutList from './WorkoutList'\n\n\nfunction PlanList(props) {\n\n    \n    const [editWorkout,setEditWorkout] = useState(null)\n    console.log(props.plans)\n     // console.log(\"TOKENIZACJA\",token['mytoken'])\n\n    const editBtn = (workout) => {\n        setEditWorkout(workout)\n    }\n\n    const updatedInformation = (workout) => {\n        const new_workout = workouts.map(myworkout => {\n        if(myworkout.id === workout.id) {\n            return workout;\n        }\n        else {\n            return myworkout;\n        }\n        })\n        setWorkouts(new_workout)\n    }\n\n    const insertedInformation = (workout) => {\n        const new_workouts= [...workouts, workout]\n        setWorkouts(new_workouts)\n\n    }\n\n    const deleteBtn = (workout) => {\n        const new_workouts = workouts.filter(myworkout => {\n        if(myworkout.id === workout.id) {\n            return false\n        }\n        return true;\n        })\n\n        setWorkouts(new_workouts)\n\n    }\n    return (\n        <div>\n        {props.plans && props.plans.map(plan => {\n            return(<div>\n                <WorkoutList workouts={plan.workouts} editBtn={editBtn} deleteBtn={deleteBtn}/>\n                <button onClick = {WorkoutForm} className = \"btn btn-primary\">Insert Workout</button>\n            <WorkoutList workouts={workouts} />\n            {editWorkout ? <Form workout = {editWorkout} updatedInformation = {updatedInformation} insertedInformation = {insertedInformation}/> : null} \n\n\n            </div>\n            )\n        })} \n        </div>\n    )\n}\n\nPlanList.propTypes = {\n\n}\n\nexport default PlanList\n\n"]},"metadata":{},"sourceType":"module"}