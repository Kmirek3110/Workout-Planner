{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/GenerateForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport APIService from '../APIService';\nimport Select from 'react-select';\nimport { useCookies } from 'react-cookie';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GenerateForm(props) {\n  _s();\n\n  const [planinfo, setPlaninfo] = useState({\n    number: \"\",\n    target: \"\",\n    time: \"\",\n    exercises: []\n  });\n  const [token] = useCookies(['mytoken']);\n  let all_names = props.exercises && props.exercises.map(function (item) {\n    return {\n      value: item.exercise_name\n    };\n  });\n  console.log(planinfo);\n\n  const handleSumbit = () => {\n    // e.preventDefault()\n    APIService.GeneratePlan(planinfo, token['mytoken']);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSumbit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: \"Number of workouts in plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      name: \"number\",\n      options: [{\n        value: 1\n      }, {\n        value: 2\n      }, {\n        value: 3\n      }, {\n        value: 4\n      }],\n      getOptionLabel: options => options[\"value\"],\n      getOptionValue: options => options['value'],\n      type: \"number_of_workouts\",\n      onChange: e => {\n        setPlaninfo(prevState => ({ ...prevState,\n          [\"number\"]: e.value\n        }));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: \"Plan Target\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      name: \"target\",\n      options: [{\n        value: \"Strength building\"\n      }, {\n        value: \"Weight Loss\"\n      }, {\n        value: \"Endurance\"\n      }],\n      getOptionLabel: options => options[\"value\"],\n      getOptionValue: options => options['value'],\n      type: \"target\",\n      onChange: e => {\n        setPlaninfo(prevState => ({ ...prevState,\n          [\"target\"]: e.value\n        }));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: \"Time per workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"time\",\n      placeholder: \"Enter Time\",\n      onChange: e => {\n        planinfo[\"time\"] = e.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: \"Mandatory exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: all_names,\n      isMulti: true,\n      className: \"basic-multi-select\",\n      getOptionLabel: options => options[\"value\"],\n      getOptionValue: options => options['value'],\n      name: \"exercises\",\n      onChange: e => {\n        planinfo[\"exercises\"] = e;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Wy\\u015Blij\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GenerateForm, \"4GyWuMTX5KuPOIxmlRHvFsWugTM=\", false, function () {\n  return [useCookies];\n});\n\n_c = GenerateForm;\nexport default GenerateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateForm\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/GenerateForm.js"],"names":["React","useForm","APIService","Select","useCookies","useState","useEffect","GenerateForm","props","planinfo","setPlaninfo","number","target","time","exercises","token","all_names","map","item","value","exercise_name","console","log","handleSumbit","GeneratePlan","options","e","prevState"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useForm} from \"react-hook-form\"\nimport APIService from '../APIService'\nimport Select from 'react-select'\nimport {useCookies} from 'react-cookie';\nimport {useState, useEffect} from 'react'\n\nfunction GenerateForm(props) {\n\n    const [planinfo, setPlaninfo] = useState({number:\"\", target:\"\", time:\"\", exercises:[]})\n    const [token] = useCookies(['mytoken'])\n\n\n    let all_names = props.exercises && props.exercises.map(function(item){\n        return {value:item.exercise_name};\n    })\n\n    console.log(planinfo)\n    const handleSumbit = () => {\n        // e.preventDefault()\n        APIService.GeneratePlan(planinfo, token['mytoken'])\n    }\n\n    return (\n        <form onSubmit={handleSumbit}>  \n            <label className = \"form-label\">Number of workouts in plan</label>\n            <Select\n                name=\"number\" \n                options = {[\n                    {value:1},\n                    {value:2},\n                    {value:3},\n                    {value:4}\n                ]}\n                getOptionLabel={options => options[\"value\"]}\n                getOptionValue={(options) => options['value']}  \n                type=\"number_of_workouts\"\n                onChange= {(e) => {\n                    setPlaninfo(prevState => ({\n                        ...prevState,\n                        [\"number\"]:e.value}))}}\n            />\n            <label className = \"form-label\">Plan Target</label>\n\n            <Select name=\"target\"\n                options = {[{value:\"Strength building\"},{value:\"Weight Loss\"},{value:\"Endurance\"}]}\n                getOptionLabel={options => options[\"value\"]}\n                getOptionValue={(options) => options['value']}  \n                type=\"target\"\n                onChange= {(e) => {\n                    setPlaninfo(prevState => ({\n                        ...prevState,\n                        [\"target\"]:e.value}))}} \n            />\n            <label className = \"form-label\">Time per workout</label>\n            <br/>\n            <input name=\"time\" placeholder = \"Enter Time\" onChange= {(e) => {\n                    planinfo[\"time\"] = e.target.value\n                    }}/>\n            <br/>\n\n            <label className = \"form-label\">Mandatory exercises</label>\n            <Select options={all_names} \n                isMulti\n                className=\"basic-multi-select\"\n                getOptionLabel={options => options[\"value\"]}\n                getOptionValue={(options) => options['value']} \n                name=\"exercises\"\n                onChange= {(e) => {\n                    planinfo[\"exercises\"] = e}}\n            />\n             <input type=\"submit\" value=\"Wyślij\" />\n        </form>\n    )\n}\n\nexport default GenerateForm\n"]},"metadata":{},"sourceType":"module"}