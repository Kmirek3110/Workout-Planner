{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js\",\n    _s = $RefreshSig$();\n\nimport APIService from '../APIService';\nimport React, { useState } from 'react';\nimport ExerciseForm from './ExerciseForm';\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkoutList(props) {\n  _s();\n\n  const [exercise, SetExercise] = useState({\n    exercise_name: \"\",\n    reps: \"\",\n    sets: \"\"\n  });\n  const [token] = useCookies(['mytoken']);\n  const [chosenWorkout, setchosenWorkout] = useState(\"\");\n  const [exerciseEdit] = useState({\n    workout: \"\",\n    exercise: \"\"\n  });\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [errors] = useState({\n    reps: \"\",\n    sets: \"\"\n  });\n\n  const ExrAddForm = workout => {\n    setShowAddForm(!showAddForm);\n    setchosenWorkout(workout.title);\n  };\n\n  const ExrEditForm = (workout, exercise) => {\n    setShowEditForm(!showEditForm);\n    exerciseEdit.workout = workout.title;\n    exerciseEdit.exercise = exercise.exercise_name;\n  };\n\n  const UpdateExercise = workout => {\n    if (errors.reps.length === 0 && errors.reps.length === 0) {\n      APIService.UpdateExercise(workout.id, exercise, token['mytoken']).then(window.location.reload()).catch(error => console.log(error));\n    }\n  };\n\n  const deleteBtn = workout => {\n    APIService.DeleteWorkout(workout.id).then(window.location.reload()).catch(error => console.log(error));\n  };\n\n  const deleteExcr = (workout, exercise) => {\n    console.log(\"TEST\", exercise);\n    APIService.DeleteExercise(workout.id, exercise, token['mytoken']).then(window.location.reload()).catch(error => console.log(error));\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    SetExercise(prevState => ({ ...prevState,\n      [name]: value\n    }));\n\n    switch (name) {\n      case \"reps\":\n        errors.reps = !isNaN(value) && 0 < value && value < 30 ? '' : \"Must be a number between 0 and 30\";\n        if (value === \"\") errors.reps = \"\";\n        break;\n\n      case \"sets\":\n        errors.sets = !isNaN(value) && 0 < value && value < 10 ? '' : \"Must be a number between 0 and 10\";\n        if (value === \"\") errors.sets = \"\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WorkoutList\",\n    children: props.workouts && props.workouts.map(workout => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"WorkoutElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: workout.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), workout.exercises.map(exercise => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: exercise.exercise_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Reps:\", exercise.reps]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Sets:\", exercise.sets]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary test\",\n                onClick: () => ExrEditForm(workout, exercise),\n                children: \" Edit Exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger test\",\n                onClick: () => deleteExcr(workout, exercise),\n                children: \" Delete exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 41\n              }, this), showEditForm && exercise.exercise_name === exerciseEdit.exercise && workout.title === exerciseEdit.workout && /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: () => UpdateExercise(workout, exercise.exercise_name),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Reps:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"reps\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 41\n                  }, this), errors.reps.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error\",\n                    children: errors.reps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 68\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Sets:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"sets\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 41\n                  }, this), errors.sets.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error\",\n                    children: errors.sets\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 68\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"submit\",\n                    value: \"Change\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)\n          }, exercise.exercise_name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this);\n        }), showAddForm && workout.title === chosenWorkout && /*#__PURE__*/_jsxDEV(ExerciseForm, {\n          workout: workout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => ExrAddForm(workout),\n              children: \"Add new exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteBtn(workout),\n              children: \" Delete workout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this)]\n      }, workout.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkoutList, \"ibZk+yv+QdBd5LK/nTbeBnOP1yA=\", false, function () {\n  return [useCookies];\n});\n\n_c = WorkoutList;\nexport default WorkoutList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutList\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js"],"names":["APIService","React","useState","ExerciseForm","useCookies","WorkoutList","props","exercise","SetExercise","exercise_name","reps","sets","token","chosenWorkout","setchosenWorkout","exerciseEdit","workout","showAddForm","setShowAddForm","showEditForm","setShowEditForm","errors","ExrAddForm","title","ExrEditForm","UpdateExercise","length","id","then","window","location","reload","catch","error","console","log","deleteBtn","DeleteWorkout","deleteExcr","DeleteExercise","handleChange","e","name","value","target","prevState","isNaN","workouts","map","exercises"],"mappings":"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","sourcesContent":["import APIService from '../APIService';\nimport React, {useState} from 'react'\nimport ExerciseForm from './ExerciseForm';\nimport {useCookies} from 'react-cookie';\n\n\n\nfunction WorkoutList(props) {\n    \n    const [exercise, SetExercise] = useState({exercise_name:\"\", reps:\"\", sets:\"\"})\n    const [token] = useCookies(['mytoken'])\n    const [chosenWorkout,setchosenWorkout] =  useState(\"\")\n    const [exerciseEdit] = useState({workout:\"\",exercise:\"\"})\n    const [showAddForm, setShowAddForm] = useState(false)\n    const [showEditForm, setShowEditForm] = useState(false);\n    const [errors] = useState({reps:\"\",sets:\"\"})\n \n\n   \n\n    const ExrAddForm = (workout) => {\n        setShowAddForm(!showAddForm);\n        setchosenWorkout(workout.title)\n    }\n\n\n    const ExrEditForm = (workout, exercise) => {\n        setShowEditForm(!showEditForm);\n        exerciseEdit.workout = workout.title\n        exerciseEdit.exercise = exercise.exercise_name\n        \n    }\n\n    const UpdateExercise = (workout) => {\n        if(errors.reps.length ===  0 && errors.reps.length ===  0){\n            APIService.UpdateExercise(workout.id, exercise, token['mytoken'])\n            .then(window.location.reload())\n            .catch(error => console.log(error))\n        }\n      }\n    \n   \n    const deleteBtn = (workout) => {\n        APIService.DeleteWorkout(workout.id)\n        .then(window.location.reload())\n        .catch(error => console.log(error))\n    }\n\n\n    const deleteExcr = (workout, exercise) =>{\n        \n        console.log(\"TEST\", exercise)\n        APIService.DeleteExercise(workout.id, exercise, token['mytoken'])\n        .then(window.location.reload())\n        .catch(error => console.log(error))\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        SetExercise(prevState => ({\n            ...prevState,\n            [name]:value\n        }))\n        switch(name){\n            case \"reps\":\n                errors.reps = \n                    !isNaN(value) && 0 < value && value < 30 ? '' : \"Must be a number between 0 and 30\"\n\n                if (value === \"\")\n                    errors.reps = \"\" \n                break\n\n            case \"sets\":\n                errors.sets = \n                    !isNaN(value) && 0 < value && value < 10 ? '' : \"Must be a number between 0 and 10\"\n                if (value === \"\")\n                    errors.sets = \"\" \n                break\n            default:\n                break\n        }\n    }\n\n    return (\n        <div className=\"WorkoutList\">\n          \n            {props.workouts && props.workouts.map(workout => {\n                return (\n                    <div className=\"WorkoutElement\" key = {workout.id}>\n                        <h3>{workout.title}</h3>\n                        {workout.exercises.map(exercise =>{\n                            return (\n                                \n                                <div key = {exercise.exercise_name}>\n                                    <div className = \"row\">\n                                        <div className = \"col\">\n                                            <h2>{exercise.exercise_name}</h2>\n                                          \n                                            <h2>Reps:{exercise.reps}</h2>\n                                            <h2>Sets:{exercise.sets}</h2>\n                                            \n                                        </div>\n                                     \n                                 \n                                        <button className = \"btn btn-primary test\" onClick  = {() => ExrEditForm(workout, exercise)}> Edit Exercise</button>\n                              \n                                        <button className = \"btn btn-danger test\" onClick  = {() => deleteExcr(workout,exercise)}> Delete exercise</button>\n                        \n                                    {showEditForm &&\n                                     (exercise.exercise_name === exerciseEdit.exercise) &&\n                                      (workout.title === exerciseEdit.workout) && \n\n                                    <form onSubmit={() => UpdateExercise(workout, exercise.exercise_name)}>\n                                        <div className=\"Row\">\n                                        <label>\n                                        Reps:\n                                        <input type=\"text\"  name=\"reps\"  onChange={handleChange}/>\n                                        </label>\n                                        {errors.reps.length > 0 && <span className='error'>{errors.reps}</span>}\n                                        <label>\n                                        Sets:\n                                        <input type=\"text\"  name=\"sets\" onChange={handleChange}/>\n                                        </label>\n                                        {errors.sets.length > 0 && <span className='error'>{errors.sets}</span>}\n                                        <input type=\"submit\" value=\"Change\" />\n                                        </div>\n                                       \n                                  </form>\n                                    } \n                                    </div>\n                                </div>\n                            )\n                        })\n\n                        }\n                        {showAddForm && (workout.title === chosenWorkout) &&\n                            <ExerciseForm workout={workout}/>\n                        }\n\n                      \n                    \n                        <div className = \"row\">\n                            <div className = \"col-md-2\">\n                                <button className = \"btn btn-secondary\" onClick = {() => ExrAddForm(workout)} > \n                                                                        Add new exercise</button>\n                            </div>\n                            <div className = \"col-md-2\">\n                                <button className = \"btn btn-danger\" onClick  = {() => deleteBtn(workout)}> Delete workout</button>\n                            </div>\n                          \n\n                        </div>\n                    </div>\n                    )\n                }\n            )}\n           \n            </div> \n    )\n}\n\n\nexport default WorkoutList\n\n"]},"metadata":{},"sourceType":"module"}