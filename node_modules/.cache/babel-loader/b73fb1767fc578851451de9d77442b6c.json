{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/GenerateForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport APIService from '../APIService';\nimport Select from 'react-select';\nimport { useCookies } from 'react-cookie';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GenerateForm(props) {\n  _s();\n\n  const [planinfo, setPlaninfo] = useState({\n    number: \"\",\n    target: \"\",\n    time: \"\",\n    exercises: []\n  });\n  const [error, setError] = useState(false);\n  const [token] = useCookies(['mytoken']);\n  let history = useHistory();\n  let all_names = props.exercises && props.exercises.map(function (item) {\n    return {\n      exercise_name: item.exercise_name\n    };\n  });\n\n  const isValid = plan => {\n    return true;\n  };\n\n  const handleSumbit = e => {\n    e.preventDefault();\n    if (isValid(planinfo)) APIService.GeneratePlan(planinfo, token['mytoken']).then(resp => history.push(`/plan/${resp.id}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSumbit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: \"Number of workouts in plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      name: \"number\",\n      options: [{\n        value: 1\n      }, {\n        value: 2\n      }, {\n        value: 3\n      }, {\n        value: 4\n      }],\n      getOptionLabel: options => options[\"value\"],\n      getOptionValue: options => options['value'],\n      required: true,\n      type: \"number_of_workouts\",\n      onChange: e => {\n        planinfo[\"number\"] = e.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: \"Plan Target\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      name: \"target\",\n      options: [{\n        label: \"Strength building\",\n        value: \"STR\"\n      }, {\n        label: \"Weight Loss\",\n        value: \"WL\"\n      }, {\n        label: \"Endurance\",\n        value: \"EN\"\n      }],\n      getOptionLabel: options => options[\"label\"],\n      getOptionValue: options => options['value'],\n      required: true,\n      type: \"target\",\n      onChange: e => {\n        planinfo[\"target\"] = e.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: \"Time per workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"time\",\n      placeholder: \"Enter Time\",\n      required: true,\n      onChange: e => {\n        planinfo[\"time\"] = e.target.value;\n        {\n          !Number(e.target.value) || 0 > e.target.value || e.target.value > 120 ? setError(true) : setError(false);\n        }\n        {\n          e.target.value == \"\" ? setError(false) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 63\n          }, this);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), error > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 32\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: \"Must be a numeric value between 0 and 120\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: \"Mandatory exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: all_names,\n      isMulti: true,\n      className: \"basic-multi-select\",\n      getOptionLabel: options => options[\"exercise_name\"],\n      getOptionValue: options => options['exercise_name'],\n      name: \"exercises\",\n      onChange: e => {\n        planinfo[\"exercises\"] = e;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Wy\\u015Blij\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 14\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Invalid form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GenerateForm, \"BwpPP3C6z0uCLo457dTt2XqeMUc=\", false, function () {\n  return [useCookies, useHistory];\n});\n\n_c = GenerateForm;\nexport default GenerateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateForm\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/GenerateForm.js"],"names":["React","APIService","Select","useCookies","useState","useHistory","GenerateForm","props","planinfo","setPlaninfo","number","target","time","exercises","error","setError","token","history","all_names","map","item","exercise_name","isValid","plan","handleSumbit","e","preventDefault","GeneratePlan","then","resp","push","id","value","options","label","Number"],"mappings":"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","sourcesContent":["import React from 'react'\nimport APIService from '../APIService'\nimport Select from 'react-select'\nimport {useCookies} from 'react-cookie';\nimport {useState} from 'react'\nimport {useHistory} from 'react-router-dom';\n\nfunction GenerateForm(props) {\n\n    const [planinfo, setPlaninfo] = useState({number:\"\", target:\"\", time:\"\", exercises:[]})\n    const [error,setError] = useState(false)\n    const [token] = useCookies(['mytoken'])\n    let history = useHistory()\n\n    let all_names = props.exercises && props.exercises.map(function(item){\n        return {exercise_name:item.exercise_name};\n    })\n\n    const isValid = (plan) => {\n        return true\n    }\n    \n    \n    const handleSumbit = (e) => {\n        e.preventDefault()\n        if (isValid(planinfo))\n            APIService.GeneratePlan(planinfo, token['mytoken'])\n            .then(resp => history.push(`/plan/${resp.id}`))\n    }\n\n    return (\n        <form onSubmit={handleSumbit}>  \n            <label className = \"form-label\">Number of workouts in plan</label>\n            <Select\n                name=\"number\" \n                options = {[\n                    {value:1},\n                    {value:2},\n                    {value:3},\n                    {value:4}\n                ]}\n                getOptionLabel={options => options[\"value\"]}\n                getOptionValue={(options) => options['value']}\n                required  \n                type=\"number_of_workouts\"\n                onChange= {(e) => {\n                    planinfo[\"number\"] = e.value\n                }}\n            />\n            <label className = \"form-label\">Plan Target</label>\n\n            <Select name=\"target\"\n                options = {[\n                    {label:\"Strength building\",value:\"STR\"},\n                    {label:\"Weight Loss\",value:\"WL\"},\n                    {label:\"Endurance\",value:\"EN\"},\n                ]}\n                getOptionLabel={options => options[\"label\"]}\n                getOptionValue={(options) => options['value']}\n                required  \n                type=\"target\"\n                onChange= {(e) => {\n                    planinfo[\"target\"] = e.value}} \n            />\n            <label className = \"form-label\">Time per workout</label>\n            <br/>\n            <input name=\"time\" placeholder = \"Enter Time\" required onChange= {(e) => {\n                    planinfo[\"time\"] = e.target.value\n                    {(!Number(e.target.value) ||\n                         0 > e.target.value ||\n                          e.target.value > 120) ? setError(true) : setError(false)\n                        }\n                    {e.target.value == \"\" ? setError(false) : <div/>}\n                    }}/>\n            {error > 0 && <div><br/> <span className='error'>Must be a numeric value between 0 and 120</span></div>}\n            <br/>\n            \n            <label className = \"form-label\">Mandatory exercises</label>\n            <Select options={all_names} \n                isMulti\n                className=\"basic-multi-select\"\n                getOptionLabel={options => options[\"exercise_name\"]}\n                getOptionValue={(options) => options['exercise_name']} \n                name=\"exercises\"\n                onChange= {(e) => {\n                    planinfo[\"exercises\"] = e}}\n            />\n             <input type=\"submit\" value=\"Wyślij\" />\n             {error && <h3>Invalid form</h3>}\n        </form>\n    )\n}\n\nexport default GenerateForm\n"]},"metadata":{},"sourceType":"module"}