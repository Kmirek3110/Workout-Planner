{"ast":null,"code":"import _slicedToArray from\"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import APIService from'../APIService';import Select from'react-select';import{useCookies}from'react-cookie';import{useState}from'react';import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function GenerateForm(props){var _useState=useState({number:\"\",target:\"\",time:\"\",exercises:[]}),_useState2=_slicedToArray(_useState,1),planinfo=_useState2[0];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useCookies=useCookies(['mytoken']),_useCookies2=_slicedToArray(_useCookies,1),token=_useCookies2[0];var history=useHistory();var all_names=props.exercises&&props.exercises.map(function(item){return{exercise_name:item.exercise_name};});var isValid=function isValid(plan){return true;};var handleSumbit=function handleSumbit(e){e.preventDefault();if(isValid(planinfo))APIService.GeneratePlan(planinfo,token['mytoken']).then(function(resp){return history.push(\"/plan/\".concat(resp.id));});};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSumbit,children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Number of workouts in plan\"}),/*#__PURE__*/_jsx(Select,{name:\"number\",options:[{value:1},{value:2},{value:3},{value:4}],getOptionLabel:function getOptionLabel(options){return options[\"value\"];},getOptionValue:function getOptionValue(options){return options['value'];},required:true,type:\"number_of_workouts\",onChange:function onChange(e){planinfo[\"number\"]=e.value;}}),/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Plan Target\"}),/*#__PURE__*/_jsx(Select,{name:\"target\",options:[{label:\"Strength building\",value:\"STR\"},{label:\"Weight Loss\",value:\"WL\"},{label:\"Endurance\",value:\"EN\"}],getOptionLabel:function getOptionLabel(options){return options[\"label\"];},getOptionValue:function getOptionValue(options){return options['value'];},required:true,type:\"target\",onChange:function onChange(e){planinfo[\"target\"]=e.value;}}),/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Time per workout\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{name:\"time\",placeholder:\"Enter Time\",required:true,onChange:function onChange(e){planinfo[\"time\"]=e.target.value;{!Number(e.target.value)||0>e.target.value||e.target.value>120?setError(true):setError(false);}{e.target.value===\"\"?setError(false):/*#__PURE__*/_jsx(\"div\",{});}}}),error>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"br\",{}),\" \",/*#__PURE__*/_jsx(\"span\",{className:\"error\",children:\"Must be a numeric value between 0 and 120\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Mandatory exercises\"}),/*#__PURE__*/_jsx(Select,{options:all_names,isMulti:true,className:\"basic-multi-select\",getOptionLabel:function getOptionLabel(options){return options[\"exercise_name\"];},getOptionValue:function getOptionValue(options){return options['exercise_name'];},name:\"exercises\",onChange:function onChange(e){planinfo[\"exercises\"]=e;}}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Wy\\u015Blij\"}),error&&/*#__PURE__*/_jsx(\"h3\",{children:\"Invalid form\"})]});}export default GenerateForm;","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/GenerateForm.js"],"names":["React","APIService","Select","useCookies","useState","useHistory","GenerateForm","props","number","target","time","exercises","planinfo","error","setError","token","history","all_names","map","item","exercise_name","isValid","plan","handleSumbit","e","preventDefault","GeneratePlan","then","resp","push","id","value","options","label","Number"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAAQC,UAAR,KAAyB,cAAzB,CACA,OAAQC,QAAR,KAAuB,OAAvB,CACA,OAAQC,UAAR,KAAyB,kBAAzB,C,wFAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAEzB,cAAmBH,QAAQ,CAAC,CAACI,MAAM,CAAC,EAAR,CAAYC,MAAM,CAAC,EAAnB,CAAuBC,IAAI,CAAC,EAA5B,CAAgCC,SAAS,CAAC,EAA1C,CAAD,CAA3B,wCAAOC,QAAP,eACA,eAAyBR,QAAQ,CAAC,KAAD,CAAjC,yCAAOS,KAAP,eAAaC,QAAb,eACA,gBAAgBX,UAAU,CAAC,CAAC,SAAD,CAAD,CAA1B,4CAAOY,KAAP,iBACA,GAAIC,CAAAA,OAAO,CAAGX,UAAU,EAAxB,CAEA,GAAIY,CAAAA,SAAS,CAAGV,KAAK,CAACI,SAAN,EAAmBJ,KAAK,CAACI,SAAN,CAAgBO,GAAhB,CAAoB,SAASC,IAAT,CAAc,CACjE,MAAO,CAACC,aAAa,CAACD,IAAI,CAACC,aAApB,CAAP,CACH,CAFkC,CAAnC,CAIA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAU,CACtB,MAAO,KAAP,CACH,CAFD,CAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBA,CAAC,CAACC,cAAF,GACA,GAAIJ,OAAO,CAACT,QAAD,CAAX,CACIX,UAAU,CAACyB,YAAX,CAAwBd,QAAxB,CAAkCG,KAAK,CAAC,SAAD,CAAvC,EACCY,IADD,CACM,SAAAC,IAAI,QAAIZ,CAAAA,OAAO,CAACa,IAAR,iBAAsBD,IAAI,CAACE,EAA3B,EAAJ,EADV,EAEP,CALD,CAOA,mBACI,cAAM,QAAQ,CAAEP,YAAhB,wBACI,cAAO,SAAS,CAAG,YAAnB,wCADJ,cAEI,KAAC,MAAD,EACI,IAAI,CAAC,QADT,CAEI,OAAO,CAAI,CACP,CAACQ,KAAK,CAAC,CAAP,CADO,CAEP,CAACA,KAAK,CAAC,CAAP,CAFO,CAGP,CAACA,KAAK,CAAC,CAAP,CAHO,CAIP,CAACA,KAAK,CAAC,CAAP,CAJO,CAFf,CAQI,cAAc,CAAE,wBAAAC,OAAO,QAAIA,CAAAA,OAAO,CAAC,OAAD,CAAX,EAR3B,CASI,cAAc,CAAE,wBAACA,OAAD,QAAaA,CAAAA,OAAO,CAAC,OAAD,CAApB,EATpB,CAUI,QAAQ,KAVZ,CAWI,IAAI,CAAC,oBAXT,CAYI,QAAQ,CAAG,kBAACR,CAAD,CAAO,CACdZ,QAAQ,CAAC,QAAD,CAAR,CAAqBY,CAAC,CAACO,KAAvB,CACH,CAdL,EAFJ,cAkBI,cAAO,SAAS,CAAG,YAAnB,yBAlBJ,cAoBI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CACI,OAAO,CAAI,CACP,CAACE,KAAK,CAAC,mBAAP,CAA2BF,KAAK,CAAC,KAAjC,CADO,CAEP,CAACE,KAAK,CAAC,aAAP,CAAqBF,KAAK,CAAC,IAA3B,CAFO,CAGP,CAACE,KAAK,CAAC,WAAP,CAAmBF,KAAK,CAAC,IAAzB,CAHO,CADf,CAMI,cAAc,CAAE,wBAAAC,OAAO,QAAIA,CAAAA,OAAO,CAAC,OAAD,CAAX,EAN3B,CAOI,cAAc,CAAE,wBAACA,OAAD,QAAaA,CAAAA,OAAO,CAAC,OAAD,CAApB,EAPpB,CAQI,QAAQ,KARZ,CASI,IAAI,CAAC,QATT,CAUI,QAAQ,CAAG,kBAACR,CAAD,CAAO,CACdZ,QAAQ,CAAC,QAAD,CAAR,CAAqBY,CAAC,CAACO,KAAvB,CAA6B,CAXrC,EApBJ,cAiCI,cAAO,SAAS,CAAG,YAAnB,8BAjCJ,cAkCI,aAlCJ,cAmCI,cAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAG,YAAjC,CAA8C,QAAQ,KAAtD,CAAuD,QAAQ,CAAG,kBAACP,CAAD,CAAO,CACjEZ,QAAQ,CAAC,MAAD,CAAR,CAAmBY,CAAC,CAACf,MAAF,CAASsB,KAA5B,CACA,CAAC,CAACG,MAAM,CAACV,CAAC,CAACf,MAAF,CAASsB,KAAV,CAAP,EACI,EAAIP,CAAC,CAACf,MAAF,CAASsB,KADjB,EAEKP,CAAC,CAACf,MAAF,CAASsB,KAAT,CAAiB,GAFtB,CAE4BjB,QAAQ,CAAC,IAAD,CAFpC,CAE6CA,QAAQ,CAAC,KAAD,CAFrD,CAGI,CACL,CAACU,CAAC,CAACf,MAAF,CAASsB,KAAT,GAAmB,EAAnB,CAAwBjB,QAAQ,CAAC,KAAD,CAAhC,cAA0C,cAA1C,CAAiD,CACjD,CAPT,EAnCJ,CA2CKD,KAAK,CAAG,CAAR,eAAa,oCAAK,aAAL,kBAAW,aAAM,SAAS,CAAC,OAAhB,uDAAX,GA3ClB,cA4CI,aA5CJ,cA8CI,cAAO,SAAS,CAAG,YAAnB,iCA9CJ,cA+CI,KAAC,MAAD,EAAQ,OAAO,CAAEI,SAAjB,CACI,OAAO,KADX,CAEI,SAAS,CAAC,oBAFd,CAGI,cAAc,CAAE,wBAAAe,OAAO,QAAIA,CAAAA,OAAO,CAAC,eAAD,CAAX,EAH3B,CAII,cAAc,CAAE,wBAACA,OAAD,QAAaA,CAAAA,OAAO,CAAC,eAAD,CAApB,EAJpB,CAKI,IAAI,CAAC,WALT,CAMI,QAAQ,CAAG,kBAACR,CAAD,CAAO,CACdZ,QAAQ,CAAC,WAAD,CAAR,CAAwBY,CAAxB,CAA0B,CAPlC,EA/CJ,cAwDK,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,aAA3B,EAxDL,CAyDMX,KAAK,eAAI,oCAzDf,GADJ,CA6DH,CAED,cAAeP,CAAAA,YAAf","sourcesContent":["import React from 'react'\nimport APIService from '../APIService'\nimport Select from 'react-select'\nimport {useCookies} from 'react-cookie';\nimport {useState} from 'react'\nimport {useHistory} from 'react-router-dom';\n\nfunction GenerateForm(props) {\n\n    const [planinfo] = useState({number:\"\", target:\"\", time:\"\", exercises:[]})\n    const [error,setError] = useState(false)\n    const [token] = useCookies(['mytoken'])\n    let history = useHistory()\n\n    let all_names = props.exercises && props.exercises.map(function(item){\n        return {exercise_name:item.exercise_name};\n    })\n\n    const isValid = (plan) => {\n        return true\n    }\n    \n    \n    const handleSumbit = (e) => {\n        e.preventDefault()\n        if (isValid(planinfo))\n            APIService.GeneratePlan(planinfo, token['mytoken'])\n            .then(resp => history.push(`/plan/${resp.id}`))\n    }\n\n    return (\n        <form onSubmit={handleSumbit}>  \n            <label className = \"form-label\">Number of workouts in plan</label>\n            <Select\n                name=\"number\" \n                options = {[\n                    {value:1},\n                    {value:2},\n                    {value:3},\n                    {value:4}\n                ]}\n                getOptionLabel={options => options[\"value\"]}\n                getOptionValue={(options) => options['value']}\n                required  \n                type=\"number_of_workouts\"\n                onChange= {(e) => {\n                    planinfo[\"number\"] = e.value\n                }}\n            />\n            <label className = \"form-label\">Plan Target</label>\n\n            <Select name=\"target\"\n                options = {[\n                    {label:\"Strength building\",value:\"STR\"},\n                    {label:\"Weight Loss\",value:\"WL\"},\n                    {label:\"Endurance\",value:\"EN\"},\n                ]}\n                getOptionLabel={options => options[\"label\"]}\n                getOptionValue={(options) => options['value']}\n                required  \n                type=\"target\"\n                onChange= {(e) => {\n                    planinfo[\"target\"] = e.value}} \n            />\n            <label className = \"form-label\">Time per workout</label>\n            <br/>\n            <input name=\"time\" placeholder = \"Enter Time\" required onChange= {(e) => {\n                    planinfo[\"time\"] = e.target.value\n                    {!Number(e.target.value) ||\n                         0 > e.target.value ||\n                          e.target.value > 120 ? setError(true) : setError(false)\n                        }\n                    {e.target.value === \"\" ? setError(false) : <div/>}\n                    }}/>\n            {error > 0 && <div><br/> <span className='error'>Must be a numeric value between 0 and 120</span></div>}\n            <br/>\n            \n            <label className = \"form-label\">Mandatory exercises</label>\n            <Select options={all_names} \n                isMulti\n                className=\"basic-multi-select\"\n                getOptionLabel={options => options[\"exercise_name\"]}\n                getOptionValue={(options) => options['exercise_name']} \n                name=\"exercises\"\n                onChange= {(e) => {\n                    planinfo[\"exercises\"] = e}}\n            />\n             <input type=\"submit\" value=\"Wyślij\" />\n             {error && <h3>Invalid form</h3>}\n        </form>\n    )\n}\n\nexport default GenerateForm\n"]},"metadata":{},"sourceType":"module"}