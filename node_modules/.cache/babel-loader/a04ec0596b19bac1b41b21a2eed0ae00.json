{"ast":null,"code":"export default class APIService {\n  static FinishPlan(plan_id, token) {\n    // event.preventDefault()\n    console.log(\"token detail\", token);\n    return fetch(`http://127.0.0.1:8000/finished-plan/${plan_id}`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(resp => resp.json());\n  }\n\n  static PlanCreate(body, token) {\n    // event.preventDefault()\n    console.log(\"token detail\", token);\n    return fetch('http://127.0.0.1:8000/plan-create', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static PlanDelete(token, plan_id) {\n    console.log(\"token detail\", token);\n    return fetch(`http://127.0.0.1:8000/plan-delete/${plan_id}`, {\n      'method': 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(resp => resp.json());\n  }\n\n  static PlanDetail(plan_id, token) {\n    console.log(\"token detail\", token);\n    return fetch(`http://127.0.0.1:8000/plan-detail/${plan_id}`, {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(resp => resp.json());\n  }\n\n  static PlanAddWorkout(plan_id, body, token) {\n    console.log(\"Asdasd\", body);\n    return fetch(`http://127.0.0.1:8000/plan-add-workout/${plan_id}`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static WorkoutList(token) {\n    console.log(\"Kreacja\", token);\n    return fetch(`http://127.0.0.1:8000/workout-list`, {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(resp => resp.json());\n  }\n\n  static CreateWorkout(body, token) {\n    console.log(\"Kreacja\", token);\n    return fetch(`http://127.0.0.1:8000/workout-create`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static UpdateWorkout(workout_id, body, exercises, token) {\n    console.log(\"Updatowanie\", workout_id, body);\n    console.log(\"Przy updatowaniu exercises\", exercises);\n    return fetch(`http://127.0.0.1:8000/workout-update/${workout_id}/`, {\n      'method': 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static AddExercise(workout_id, body, token) {\n    console.log(\"Przy dodawaniu exercises\", body);\n    return fetch(`http://127.0.0.1:8000/workout-add-exercise/${workout_id}`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static UpdateExercise(workout_id, body, token) {\n    console.log(\"Przy udpotowaniu exercises\", body);\n    return fetch(`http://127.0.0.1:8000/workout-update-exercise/${workout_id}`, {\n      'method': 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static DeleteExercise(workout_id, body, token) {\n    console.log(\"Przy usuwaniu exercises\", body);\n    return fetch(`http://127.0.0.1:8000/workout-delete-exercise/${workout_id}`, {\n      'method': 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static DeleteWorkout(workout_id, token) {\n    console.log(\"Usuwanie\", workout_id);\n    return fetch(`http://127.0.0.1:8000/workout-delete/${workout_id}/`, {\n      'method': 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    });\n  }\n\n  static LoginUser(body) {\n    return fetch('http://127.0.0.1:8000/auth/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static RegisterUser(body) {\n    return fetch('http://127.0.0.1:8000/users', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n}","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/APIService.js"],"names":["APIService","FinishPlan","plan_id","token","console","log","fetch","headers","then","resp","json","PlanCreate","body","JSON","stringify","PlanDelete","PlanDetail","PlanAddWorkout","WorkoutList","CreateWorkout","UpdateWorkout","workout_id","exercises","AddExercise","UpdateExercise","DeleteExercise","DeleteWorkout","LoginUser","RegisterUser"],"mappings":"AACA,eAAe,MAAMA,UAAN,CAAgB;AAEV,SAAVC,UAAU,CAACC,OAAD,EAAUC,KAAV,EAAgB;AAC7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,KAA3B;AACA,WAAOG,KAAK,CAAE,uCAAsCJ,OAAQ,EAAhD,EAAkD;AAC1D,gBAAS,MADiD;AAE1DK,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQJ,KAAM;AAF1B;AAFiD,KAAlD,CAAL,CAMJK,IANI,CAMCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANT,CAAP;AAOH;;AAEgB,SAAVC,UAAU,CAACC,IAAD,EAAOT,KAAP,EAAa;AAC1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,KAA3B;AACA,WAAOG,KAAK,CAAC,mCAAD,EAAqC;AAC7C,gBAAS,MADoC;AAE7CC,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQJ,KAAM;AAF1B,OAFoC;AAM7CS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeF,IAAf;AANwC,KAArC,CAAL,CAOJJ,IAPI,CAOCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPT,CAAP;AAQH;;AAEgB,SAAVK,UAAU,CAACZ,KAAD,EAAQD,OAAR,EAAgB;AAC7BE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,KAA3B;AACA,WAAOG,KAAK,CAAE,qCAAoCJ,OAAQ,EAA9C,EAAgD;AACxD,gBAAS,QAD+C;AAExDK,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQJ,KAAM;AAF1B;AAF+C,KAAhD,CAAL,CAMJK,IANI,CAMCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANT,CAAP;AAOH;;AAEgB,SAAVM,UAAU,CAACd,OAAD,EAAUC,KAAV,EAAgB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,KAA3B;AACA,WAAOG,KAAK,CAAE,qCAAoCJ,OAAQ,EAA9C,EAAgD;AACxD,gBAAS,KAD+C;AAExDK,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQJ,KAAM;AAF1B;AAF+C,KAAhD,CAAL,CAMJK,IANI,CAMCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANT,CAAP;AAOH;;AAEoB,SAAdO,cAAc,CAACf,OAAD,EAAUU,IAAV,EAAgBT,KAAhB,EAAsB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBO,IAArB;AACA,WAAON,KAAK,CAAE,0CAAyCJ,OAAQ,EAAnD,EAAsD;AAC9D,gBAAS,MADqD;AAE9DK,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQJ,KAAM;AAF1B,OAFqD;AAM9DS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeF,IAAf;AANyD,KAAtD,CAAL,CAQJJ,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,CAAP;AAUH;;AAGiB,SAAXQ,WAAW,CAACf,KAAD,EAAO;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,WAAOG,KAAK,CAAE,oCAAF,EAAuC;AAC/C,gBAAS,KADsC;AAE/CC,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQJ,KAAM;AAF1B;AAFsC,KAAvC,CAAL,CAMJK,IANI,CAMCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANT,CAAP;AAOH;;AAEmB,SAAbS,aAAa,CAACP,IAAD,EAAOT,KAAP,EAAa;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,WAAOG,KAAK,CAAE,sCAAF,EAAyC;AACjD,gBAAS,MADwC;AAEjDC,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQJ,KAAM;AAF1B,OAFwC;AAMjDS,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAN4C,KAAzC,CAAL,CAQJJ,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,CAAP;AASH;;AAEmB,SAAbU,aAAa,CAACC,UAAD,EAAaT,IAAb,EAAmBU,SAAnB,EAA8BnB,KAA9B,EAAoC;AACpDC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BgB,UAA1B,EAAsCT,IAAtC;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCiB,SAAzC;AACA,WAAOhB,KAAK,CAAE,wCAAuCe,UAAW,GAApD,EAAwD;AAChE,gBAAS,KADuD;AAEhEd,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQJ,KAAM;AAF1B,OAFuD;AAMhES,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAN2D,KAAxD,CAAL,CASJJ,IATI,CASCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATT,CAAP;AAUH;;AAEiB,SAAXa,WAAW,CAACF,UAAD,EAAaT,IAAb,EAAmBT,KAAnB,EAAyB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCO,IAAvC;AAEA,WAAON,KAAK,CAAE,8CAA6Ce,UAAW,EAA1D,EAA6D;AACrE,gBAAS,MAD4D;AAErEd,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQJ,KAAM;AAF1B,OAF4D;AAMrES,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeF,IAAf;AANgE,KAA7D,CAAL,CASJJ,IATI,CASCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATT,CAAP;AAUH;;AAEoB,SAAdc,cAAc,CAACH,UAAD,EAAaT,IAAb,EAAmBT,KAAnB,EAAyB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCO,IAAzC;AACA,WAAON,KAAK,CAAE,iDAAgDe,UAAW,EAA7D,EAAgE;AACxE,gBAAS,KAD+D;AAExEd,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQJ,KAAM;AAF1B,OAF+D;AAMxES,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeF,IAAf;AANmE,KAAhE,CAAL,CASJJ,IATI,CASCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATT,CAAP;AAUH;;AAEoB,SAAde,cAAc,CAACJ,UAAD,EAAaT,IAAb,EAAmBT,KAAnB,EAAyB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCO,IAAtC;AACA,WAAON,KAAK,CAAE,iDAAgDe,UAAW,EAA7D,EAAgE;AACxE,gBAAS,QAD+D;AAExEd,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQJ,KAAM;AAF1B,OAF+D;AAMxES,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeF,IAAf;AANmE,KAAhE,CAAL,CASJJ,IATI,CASCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATT,CAAP;AAUH;;AAEmB,SAAbgB,aAAa,CAACL,UAAD,EAAalB,KAAb,EAAmB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBgB,UAAvB;AACA,WAAOf,KAAK,CAAE,wCAAuCe,UAAW,GAApD,EAAwD;AAChE,gBAAS,QADuD;AAEhEd,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,yBAAiB,SAAQJ,KAAM;AAF1B;AAFuD,KAAxD,CAAZ;AAOH;;AACe,SAATwB,SAAS,CAACf,IAAD,EAAO;AAEnB,WAAON,KAAK,CAAC,6BAAD,EAAgC;AAC1C,gBAAS,MADiC;AAE1CC,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV,OAFiC;AAMxCK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeF,IAAf;AANmC,KAAhC,CAAL,CAQJJ,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,CAAP;AAUD;;AAGkB,SAAZkB,YAAY,CAAChB,IAAD,EAAO;AAExB,WAAON,KAAK,CAAC,6BAAD,EAAgC;AAC1C,gBAAS,MADiC;AAE1CC,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV,OAFiC;AAMxCK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeF,IAAf;AANmC,KAAhC,CAAL,CAQJJ,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,CAAP;AAUD;;AAvLwB","sourcesContent":["\nexport default class APIService{\n\n    static FinishPlan(plan_id, token){\n        // event.preventDefault()\n        console.log(\"token detail\",token)\n        return fetch(`http://127.0.0.1:8000/finished-plan/${plan_id}`,{\n            'method':'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            }\n        }).then(resp => resp.json())\n    }\n\n    static PlanCreate(body, token){\n        // event.preventDefault()\n        console.log(\"token detail\",token)\n        return fetch('http://127.0.0.1:8000/plan-create',{\n            'method':'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            },\n            body:JSON.stringify(body)\n        }).then(resp => resp.json())\n    }\n\n    static PlanDelete(token, plan_id){\n        console.log(\"token detail\",token)\n        return fetch(`http://127.0.0.1:8000/plan-delete/${plan_id}`,{\n            'method':'DELETE',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            },\n        }).then(resp => resp.json())\n    }\n\n    static PlanDetail(plan_id, token){\n        console.log(\"token detail\",token)\n        return fetch(`http://127.0.0.1:8000/plan-detail/${plan_id}`,{\n            'method':'GET',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            }\n        }).then(resp => resp.json())\n    }\n\n    static PlanAddWorkout(plan_id, body, token){\n        console.log(\"Asdasd\",body)\n        return fetch(`http://127.0.0.1:8000/plan-add-workout/${plan_id}`, {\n            'method':'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            }, \n            body:JSON.stringify(body)\n\n        }).then(resp => resp.json())\n\n    }\n\n\n    static WorkoutList(token){\n        console.log(\"Kreacja\", token)\n        return fetch(`http://127.0.0.1:8000/workout-list`, {\n            'method':'GET',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            }\n        }).then(resp => resp.json())\n    }\n    \n    static CreateWorkout(body, token){\n        console.log(\"Kreacja\", token)\n        return fetch(`http://127.0.0.1:8000/workout-create`, {\n            'method':'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            }, \n            body:JSON.stringify(body)\n\n        }).then(resp => resp.json())\n    }\n\n    static UpdateWorkout(workout_id, body, exercises, token){\n        console.log(\"Updatowanie\",workout_id, body)\n        console.log(\"Przy updatowaniu exercises\",exercises)\n        return fetch(`http://127.0.0.1:8000/workout-update/${workout_id}/`, {\n            'method':'PUT',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` ,\n            }, \n            body:JSON.stringify(body)\n           \n\n        }).then(resp => resp.json())\n    }\n\n    static AddExercise(workout_id, body, token){\n        console.log(\"Przy dodawaniu exercises\",body)\n        \n        return fetch(`http://127.0.0.1:8000/workout-add-exercise/${workout_id}`, {\n            'method':'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}`,\n            }, \n            body:JSON.stringify(body)\n           \n\n        }).then(resp => resp.json())\n    }\n\n    static UpdateExercise(workout_id, body, token){\n        console.log(\"Przy udpotowaniu exercises\",body)\n        return fetch(`http://127.0.0.1:8000/workout-update-exercise/${workout_id}`, {\n            'method':'PUT',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}`,\n            }, \n            body:JSON.stringify(body)\n           \n\n        }).then(resp => resp.json())\n    }\n\n    static DeleteExercise(workout_id, body, token){\n        console.log(\"Przy usuwaniu exercises\",body)\n        return fetch(`http://127.0.0.1:8000/workout-delete-exercise/${workout_id}`, {\n            'method':'DELETE',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}`,\n            }, \n            body:JSON.stringify(body)\n           \n\n        }).then(resp => resp.json())\n    }\n\n    static DeleteWorkout(workout_id, token){\n        console.log(\"Usuwanie\",workout_id)\n        return fetch(`http://127.0.0.1:8000/workout-delete/${workout_id}/`, {\n            'method':'DELETE',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization':`Token ${token}` \n            }\n        })\n    }\n    static LoginUser(body) {\n\n        return fetch('http://127.0.0.1:8000/auth/', {\n          'method':'POST',\n          headers: {\n              'Content-Type':'application/json',\n              \n            }, \n            body:JSON.stringify(body)\n  \n        }).then(resp => resp.json())\n  \n      }\n  \n  \n      static RegisterUser(body) {\n  \n        return fetch('http://127.0.0.1:8000/users', {\n          'method':'POST',\n          headers: {\n              'Content-Type':'application/json',\n              \n            }, \n            body:JSON.stringify(body)\n  \n        }).then(resp => resp.json())\n  \n      }\n}"]},"metadata":{},"sourceType":"module"}