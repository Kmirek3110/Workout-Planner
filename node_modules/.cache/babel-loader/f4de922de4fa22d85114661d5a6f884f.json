{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport APIService from '../APIService';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkoutList(props) {\n  _s();\n\n  const [new_workout, setNewworkout] = useState('');\n  const [exercise_list, setExerciselist] = useState([]);\n\n  const editBtn = workout => {\n    props.editBtn(workout);\n  }; // console.log(props.workouts)\n  // console.log(props.exerciselist)\n\n\n  useEffect(() => {\n    for (let elem in props.workouts) {\n      console.log(props.workouts[elem].id);\n      fetch(`http://127.0.0.1:8000/active/${props.workouts[elem].id}`, {\n        'method': 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(resp => setExerciselist(...exercise_list, resp)).then(resp => console.log(\"SADASD-\", resp)).catch(error => console.log(error));\n    }\n  }, []); // let zipped = props.workouts.map((x, i) => [x, exercise_list[i]])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WorkoutList\",\n    children: exercise_list & exercise_list.map(el => {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"el.id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkoutList, \"1c1hRvr170/Im7SZqIfe6P35P+Q=\");\n\n_c = WorkoutList;\nWorkoutList.propTypes = {// workouts: []\n};\nexport default WorkoutList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutList\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js"],"names":["PropTypes","APIService","React","useState","useEffect","WorkoutList","props","new_workout","setNewworkout","exercise_list","setExerciselist","editBtn","workout","elem","workouts","console","log","id","fetch","headers","then","resp","json","catch","error","map","el","propTypes"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BL,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACM,aAAD,EAAgBC,eAAhB,IAAmCP,QAAQ,CAAC,EAAD,CAAjD;;AAEA,QAAMQ,OAAO,GAAIC,OAAD,IAAY;AACxBN,IAAAA,KAAK,CAACK,OAAN,CAAcC,OAAd;AACH,GAFD,CALwB,CAQxB;AACA;;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAK,IAAIS,IAAT,IAAiBP,KAAK,CAACQ,QAAvB,EAAgC;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACQ,QAAN,CAAeD,IAAf,EAAqBI,EAAjC;AACAC,MAAAA,KAAK,CAAE,gCAA+BZ,KAAK,CAACQ,QAAN,CAAeD,IAAf,EAAqBI,EAAG,EAAzD,EAA4D;AAC7D,kBAAS,KADoD;AAE7DE,QAAAA,OAAO,EAAE;AACL,0BAAe;AADV;AAFoD,OAA5D,CAAL,CAMKC,IANL,CAMUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANlB,EAOKF,IAPL,CAOUC,IAAI,IAAIX,eAAe,CAAC,GAAGD,aAAJ,EAAkBY,IAAlB,CAPjC,EAQKD,IARL,CAQUC,IAAI,IAAIN,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBK,IAAtB,CARlB,EASKE,KATL,CASWC,KAAK,IAAIT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CATpB;AAUH;AACF,GAdM,EAcJ,EAdI,CAAT,CAVwB,CAyBpB;;AACJ,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACKf,aAAa,GAAGA,aAAa,CAACgB,GAAd,CAAkBC,EAAE,IAAG;AACpC,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANgB;AADrB;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAzCQrB,W;;KAAAA,W;AA2CTA,WAAW,CAACsB,SAAZ,GAAwB,CACpB;AADoB,CAAxB;AAIA,eAAetB,WAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport APIService from '../APIService';\nimport React, {useState, useEffect} from 'react'\n\nfunction WorkoutList(props) {\n    \n    const [new_workout, setNewworkout] = useState('')\n    const [exercise_list, setExerciselist] = useState([])\n\n    const editBtn = (workout) =>{\n        props.editBtn(workout)\n    }\n    // console.log(props.workouts)\n    // console.log(props.exerciselist)\n    useEffect(() => {\n        for (let elem in props.workouts){\n            console.log(props.workouts[elem].id)\n            fetch(`http://127.0.0.1:8000/active/${props.workouts[elem].id}`, {\n                'method':'GET',\n                headers: {\n                    'Content-Type':'application/json',\n                }\n                })\n                .then(resp => resp.json())\n                .then(resp => setExerciselist(...exercise_list,resp))\n                .then(resp => console.log(\"SADASD-\",resp))\n                .catch(error => console.log(error))\n        }    \n      }, [])\n        // let zipped = props.workouts.map((x, i) => [x, exercise_list[i]])\n    return (\n        <div className=\"WorkoutList\">\n            {exercise_list & exercise_list.map(el =>{\n                return (\n                    <h3>\n                        el.id\n                    </h3>\n                )\n            }\n            )\n\n            }\n           \n            </div> \n    )\n}\n\nWorkoutList.propTypes = {\n    // workouts: []\n}\n\nexport default WorkoutList\n\n"]},"metadata":{},"sourceType":"module"}