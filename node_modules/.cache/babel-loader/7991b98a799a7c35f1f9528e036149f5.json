{"ast":null,"code":"import _toConsumableArray from\"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useState,useEffect}from'react';import{useHistory}from'react-router-dom';import{useCookies}from'react-cookie';import PlanForm from'./PlanForm';import APIService from'../APIService';import FinishedForm from'./FinishedForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PlanList(){var history=useHistory();var _useCookies=useCookies(['mytoken']),_useCookies2=_slicedToArray(_useCookies,1),token=_useCookies2[0];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),clicked=_useState2[0],setClicked=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),setGenerate=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),plans=_useState6[0],setPlans=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),chosenPlan=_useState8[0],setChosenPlan=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showDoneForm=_useState10[0],setShowDoneForm=_useState10[1];var PlanDoneForm=function PlanDoneForm(plan){setShowDoneForm(!showDoneForm);setChosenPlan(plan.id);};useEffect(function(){fetch('http://127.0.0.1:8000/plans-list',{'method':'GET',headers:{'Content-Type':'application/json','Authorization':\"Token \".concat(token['mytoken'])}}).then(function(resp){return resp.json();}).then(function(resp){return setPlans(resp);});},[token]);var buttonHandler=function buttonHandler(option){if(option===0){setClicked(function(current){return!current;});setGenerate(false);}else if(option===1){setGenerate(function(current){return!current;});setClicked(false);}};var dltPlan=function dltPlan(plan){var new_plans=plans.filter(function(myplan){if(myplan.id===plan.id){return false;}return true;});setPlans(new_plans);};var DeletePlan=function DeletePlan(plan){APIService.PlanDelete(token['mytoken'],plan.id).then(dltPlan(plan)).catch(function(error){return console.log(error);});};var addNewPlan=function addNewPlan(plan){setPlans(function(plans){return[].concat(_toConsumableArray(plans),[plan]);});setClicked(function(current){return!current;});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:plans&&plans.map(function(plan){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"PlanElement\",onClick:function onClick(){return history.push(\"/plan/\".concat(plan.id));},children:plan.plan_name}),/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger \",onClick:function onClick(){return DeletePlan(plan);},children:\" Delete Plan\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark\",onClick:function onClick(){return PlanDoneForm(plan);},children:\" Plan Instance Done\"}),showDoneForm&&chosenPlan===plan.id&&/*#__PURE__*/_jsx(FinishedForm,{plan:plan})]})]});})}),clicked?/*#__PURE__*/_jsx(PlanForm,{addNew:addNewPlan}):/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"Row\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-success middle\",onClick:function onClick(){return buttonHandler(0);},children:\"Create new Training Plan\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary right\",onClick:function onClick(){return history.push(\"/generate-plan\");},children:\"Generate CUSTOM PLAN\"})]})]});}export default PlanList;","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/PlanList.js"],"names":["React","useState","useEffect","useHistory","useCookies","PlanForm","APIService","FinishedForm","PlanList","history","token","clicked","setClicked","setGenerate","plans","setPlans","chosenPlan","setChosenPlan","showDoneForm","setShowDoneForm","PlanDoneForm","plan","id","fetch","headers","then","resp","json","buttonHandler","option","current","dltPlan","new_plans","filter","myplan","DeletePlan","PlanDelete","catch","error","console","log","addNewPlan","map","push","plan_name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom';\nimport {useCookies} from 'react-cookie';\nimport PlanForm from './PlanForm';\nimport APIService from '../APIService';\nimport FinishedForm from './FinishedForm';\n\nfunction PlanList() {\n\n    let history = useHistory()\n    const [token] = useCookies(['mytoken'])\n    const [clicked, setClicked] = useState(false)\n    const [, setGenerate] = useState(false)\n    const [plans, setPlans] = useState([])\n    const [chosenPlan,setChosenPlan] = useState(\"\")\n    const [showDoneForm, setShowDoneForm] = useState(false)\n\n      const PlanDoneForm = (plan) => {\n        setShowDoneForm(!showDoneForm);\n        setChosenPlan(plan.id)\n    }\n\n    \n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/plans-list', {\n      'method':'GET',\n      headers: {\n        'Content-Type':'application/json',\n        'Authorization':`Token ${token['mytoken']}`,\n\n      }\n    })\n    .then(resp => resp.json())\n    .then(resp => setPlans(resp))\n   \n    }, [token])\n\n    const buttonHandler = (option) => {\n      if(option === 0){\n        setClicked(current => !current)\n        setGenerate(false)\n      }\n      else if (option === 1){\n        setGenerate(current => !current)\n        setClicked(false)\n      }\n    }\n\n    const dltPlan = (plan) => {\n        const new_plans = plans.filter(myplan => {\n          if(myplan.id === plan.id) {\n            return false\n          }\n          return true;\n        })\n        setPlans(new_plans)\n      }\n\n    const DeletePlan = (plan) => {\n        APIService.PlanDelete(token['mytoken'],plan.id)\n        .then(dltPlan(plan))\n        .catch(error => console.log(error))\n    }\n\n    const addNewPlan = (plan) => {\n        setPlans(plans => [...plans,plan])\n        setClicked(current => !current)\n    }\n\n\n    return (\n        <div>  \n            <br/>\n            <br/>\n            <div className=\"row\">\n        {plans && plans.map(plan => {           \n            return(\n                <div>\n                \n                <button type=\"button\" className=\"PlanElement\" onClick={() => history.push(`/plan/${plan.id}`)}>{plan.plan_name}\n                    </ button>\n                    <div className=\"column\">\n                    <button className = \"btn btn-danger \" onClick={() => DeletePlan(plan)}> Delete Plan</button>\n                    <button className = \"btn btn-dark\" onClick  = {() => PlanDoneForm(plan)}> Plan Instance Done</button>\n                    {showDoneForm && (chosenPlan === plan.id) && <FinishedForm plan={plan}/>}\n                    </div>                 \n                </div>\n            )\n            \n        })}\n        </div>\n     \n        {clicked ? <PlanForm addNew = {addNewPlan} /> :<div/>}\n      \n        <div className =\"Row\" >\n\n        <button type=\"button\" className=\"btn btn-success middle\" onClick={() => buttonHandler(0)} >\n            Create new Training Plan\n        </button>\n\n        <button type=\"button\" className=\"btn btn-secondary right\" onClick={() => history.push(`/generate-plan`)}>Generate CUSTOM PLAN</ button>\n\n        </div>\n        \n        </div>\n    )\n}\n\nPlanList.propTypes = {\n\n}\n\nexport default PlanList\n\n"]},"metadata":{},"sourceType":"module"}