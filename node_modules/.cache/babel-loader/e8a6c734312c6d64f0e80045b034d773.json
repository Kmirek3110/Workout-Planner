{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport APIService from '../APIService';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkoutList(props) {\n  _s();\n\n  const [new_workout, setNewworkout] = useState('');\n  const [exercise_list, setExerciselist] = useState([]);\n\n  const editBtn = workout => {\n    props.editBtn(workout);\n  };\n\n  console.log(props.workouts);\n  console.log(props.exerciselist); // let x  = props.workouts\n\n  useEffect(() => {\n    for (let elem in props.workouts) {\n      console.log(\"printowanie\", props.workouts[elem]);\n      console.log(\"printowanie\", props.workouts[elem].id);\n      fetch(`http://127.0.0.1:8000/active/${props.workouts[elem].id}`, {\n        'method': 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(resp => setExerciselist(resp)).catch(error => console.log(error));\n    } // props.workouts.map(workout => {\n\n  }, [editBtn]); // let zipped = props.workouts.map((x, i) => [x, exercise_list[i]]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WorkoutList\",\n    children: props.workouts && props.workouts.map(workout => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: workout.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-1\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => editBtn(workout),\n              children: \" Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => editBtn(workout),\n              children: \" Add new\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, workout.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkoutList, \"f45bnSXQsJv+mu+0LEgT90MpZt8=\");\n\n_c = WorkoutList;\nWorkoutList.propTypes = {// workouts: []\n};\nexport default WorkoutList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutList\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js"],"names":["PropTypes","APIService","React","useState","useEffect","WorkoutList","props","new_workout","setNewworkout","exercise_list","setExerciselist","editBtn","workout","console","log","workouts","exerciselist","elem","id","fetch","headers","then","resp","json","catch","error","map","title","propTypes"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BL,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACM,aAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMQ,OAAO,GAAIC,OAAD,IAAY;AACxBN,IAAAA,KAAK,CAACK,OAAN,CAAcC,OAAd;AACH,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,QAAlB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACU,YAAlB,EATwB,CAUxB;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAK,IAAIa,IAAT,IAAiBX,KAAK,CAACS,QAAvB,EAAgC;AAC5BF,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BR,KAAK,CAACS,QAAN,CAAeE,IAAf,CAA3B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BR,KAAK,CAACS,QAAN,CAAeE,IAAf,EAAqBC,EAAhD;AACAC,MAAAA,KAAK,CAAE,gCAA+Bb,KAAK,CAACS,QAAN,CAAeE,IAAf,EAAqBC,EAAG,EAAzD,EAA4D;AAC7D,kBAAS,KADoD;AAE7DE,QAAAA,OAAO,EAAE;AACL,0BAAe;AADV;AAFoD,OAA5D,CAAL,CAMKC,IANL,CAMUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANlB,EAOKF,IAPL,CAOUC,IAAI,IAAIZ,eAAe,CAACY,IAAD,CAPjC,EAQKE,KARL,CAQWC,KAAK,IAAIZ,OAAO,CAACC,GAAR,CAAYW,KAAZ,CARpB;AASH,KAbW,CAcZ;;AAED,GAhBM,EAgBJ,CAACd,OAAD,CAhBI,CAAT,CAXwB,CA4BpB;;AAEJ,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACKL,KAAK,CAACS,QAAN,IAAkBT,KAAK,CAACS,QAAN,CAAeW,GAAf,CAAmBd,OAAO,IAAI;AACzD,0BACI;AAAA,gCACI;AAAA,oBAAKA,OAAO,CAACe;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAG,KAAjB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAG,UAAjB;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAG,iBAApB;AAAsC,cAAA,OAAO,EAAK,MAAMhB,OAAO,CAACC,OAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAG,UAAjB;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAG,iBAApB;AAAsC,cAAA,OAAO,EAAK,MAAMD,OAAO,CAACC,OAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAYA,OAAO,CAACM,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH,KAhB8B;AADvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAnDQb,W;;KAAAA,W;AAqDTA,WAAW,CAACuB,SAAZ,GAAwB,CACpB;AADoB,CAAxB;AAIA,eAAevB,WAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport APIService from '../APIService';\nimport React, {useState, useEffect} from 'react'\n\nfunction WorkoutList(props) {\n    \n    const [new_workout, setNewworkout] = useState('')\n    const [exercise_list,setExerciselist] = useState([])\n\n    const editBtn = (workout) =>{\n        props.editBtn(workout)\n    }\n    console.log(props.workouts)\n    console.log(props.exerciselist)\n    // let x  = props.workouts\n    useEffect(() => {\n        for (let elem in props.workouts){\n            console.log(\"printowanie\", props.workouts[elem])\n            console.log(\"printowanie\", props.workouts[elem].id)\n            fetch(`http://127.0.0.1:8000/active/${props.workouts[elem].id}`, {\n                'method':'GET',\n                headers: {\n                    'Content-Type':'application/json',\n                }\n                })\n                .then(resp => resp.json())\n                .then(resp => setExerciselist(resp))\n                .catch(error => console.log(error))\n        }\n        // props.workouts.map(workout => {\n             \n      }, [editBtn])\n        // let zipped = props.workouts.map((x, i) => [x, exercise_list[i]]);\n\n    return (\n        <div className=\"WorkoutList\">\n            {props.workouts && props.workouts.map(workout => {\n    return (\n        <div key = {workout.id}>\n            <h3>{workout.title}</h3>\n            {/* <h3>{workout[1]}</h3> */}\n          \n            <div className = \"row\">\n                <div className = \"col-md-1\">\n                    <button className = \"btn btn-primary\" onClick  = {() => editBtn(workout)}> Update</button>\n                </div>\n                <div className = \"col-md-2\">\n                    <button className = \"btn btn-success\" onClick  = {() => editBtn(workout)}> Add new</button>\n                </div>\n            </div>\n        </div>\n    )\n})}</div>\n    \n    )\n}\n\nWorkoutList.propTypes = {\n    // workouts: []\n}\n\nexport default WorkoutList\n\n"]},"metadata":{},"sourceType":"module"}