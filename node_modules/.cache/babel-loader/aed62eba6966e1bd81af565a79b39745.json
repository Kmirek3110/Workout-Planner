{"ast":null,"code":"var _jsxFileName = \"/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport APIService from '../APIService';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkoutList(props) {\n  _s();\n\n  const [new_workout, setNewworkout] = useState('');\n  const [exercise_list, setExerciselist] = useState([]);\n\n  const editBtn = workout => {\n    props.editBtn(workout);\n  };\n\n  console.log(props.workouts);\n  console.log(props.exerciselist);\n  useEffect(() => {\n    for (let elem in props.workouts) {\n      fetch(`http://127.0.0.1:8000/active/${props.workouts[elem].id}`, {\n        'method': 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(resp => setExerciselist(...exercise_list, resp)).then(console.log(exercise_list)).catch(error => console.log(error));\n    }\n  }, []); // let zipped = props.workouts.map((x, i) => [x, exercise_list[i]]);\n\n  console.log(\"testowankp\", exercise_list);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WorkoutList\",\n    children: props.workouts && props.workouts.map((workout, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: workout.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: exercise_list[index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-1\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => editBtn(workout),\n              children: \" Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => editBtn(workout),\n              children: \" Add new\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, workout.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkoutList, \"1c1hRvr170/Im7SZqIfe6P35P+Q=\");\n\n_c = WorkoutList;\nWorkoutList.propTypes = {// workouts: []\n};\nexport default WorkoutList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutList\");","map":{"version":3,"sources":["/home/karol/Documents/Engenieer_plan/tesis/thesis/frontend/src/components/WorkoutList.js"],"names":["PropTypes","APIService","React","useState","useEffect","WorkoutList","props","new_workout","setNewworkout","exercise_list","setExerciselist","editBtn","workout","console","log","workouts","exerciselist","elem","fetch","id","headers","then","resp","json","catch","error","map","index","title","propTypes"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BL,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACM,aAAD,EAAgBC,eAAhB,IAAmCP,QAAQ,CAAC,EAAD,CAAjD;;AAEA,QAAMQ,OAAO,GAAIC,OAAD,IAAY;AACxBN,IAAAA,KAAK,CAACK,OAAN,CAAcC,OAAd;AACH,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,QAAlB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACU,YAAlB;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAK,IAAIa,IAAT,IAAiBX,KAAK,CAACS,QAAvB,EAAgC;AAC5BG,MAAAA,KAAK,CAAE,gCAA+BZ,KAAK,CAACS,QAAN,CAAeE,IAAf,EAAqBE,EAAG,EAAzD,EAA4D;AAC7D,kBAAS,KADoD;AAE7DC,QAAAA,OAAO,EAAE;AACL,0BAAe;AADV;AAFoD,OAA5D,CAAL,CAMKC,IANL,CAMUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EANlB,EAOKF,IAPL,CAOUC,IAAI,IAAIZ,eAAe,CAAC,GAAGD,aAAJ,EAAkBa,IAAlB,CAPjC,EAQKD,IARL,CAQUR,OAAO,CAACC,GAAR,CAAYL,aAAZ,CARV,EASKe,KATL,CASWC,KAAK,IAAIZ,OAAO,CAACC,GAAR,CAAYW,KAAZ,CATpB;AAUH;AACF,GAbM,EAaJ,EAbI,CAAT,CAVwB,CAwBpB;;AACJZ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBL,aAAzB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACKH,KAAK,CAACS,QAAN,IAAkBT,KAAK,CAACS,QAAN,CAAeW,GAAf,CAAmB,CAACd,OAAD,EAASe,KAAT,KAAmB;AACrD,0BACI;AAAA,gCACI;AAAA,oBAAKf,OAAO,CAACgB;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKnB,aAAa,CAACkB,KAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAK,UAAA,SAAS,EAAG,KAAjB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAG,UAAjB;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAG,iBAApB;AAAsC,cAAA,OAAO,EAAK,MAAMhB,OAAO,CAACC,OAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAG,UAAjB;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAG,iBAApB;AAAsC,cAAA,OAAO,EAAK,MAAMD,OAAO,CAACC,OAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA,SAAYA,OAAO,CAACO,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBC,KAjBc;AADvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAhDQd,W;;KAAAA,W;AAkDTA,WAAW,CAACwB,SAAZ,GAAwB,CACpB;AADoB,CAAxB;AAIA,eAAexB,WAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport APIService from '../APIService';\nimport React, {useState, useEffect} from 'react'\n\nfunction WorkoutList(props) {\n    \n    const [new_workout, setNewworkout] = useState('')\n    const [exercise_list, setExerciselist] = useState([])\n\n    const editBtn = (workout) =>{\n        props.editBtn(workout)\n    }\n    console.log(props.workouts)\n    console.log(props.exerciselist)\n    useEffect(() => {\n        for (let elem in props.workouts){\n            fetch(`http://127.0.0.1:8000/active/${props.workouts[elem].id}`, {\n                'method':'GET',\n                headers: {\n                    'Content-Type':'application/json',\n                }\n                })\n                .then(resp => resp.json())\n                .then(resp => setExerciselist(...exercise_list,resp))\n                .then(console.log(exercise_list))\n                .catch(error => console.log(error))\n        }    \n      }, [])\n        // let zipped = props.workouts.map((x, i) => [x, exercise_list[i]]);\n    console.log(\"testowankp\",exercise_list)\n    return (\n        <div className=\"WorkoutList\">\n            {props.workouts && props.workouts.map((workout,index) => {\n                return (\n                    <div key = {workout.id}>\n                        <h3>{workout.title}</h3>\n                        <h3>{exercise_list[index]}</h3>\n                        {/* <h3>{workout[1]}</h3> */}\n                    \n                        <div className = \"row\">\n                            <div className = \"col-md-1\">\n                                <button className = \"btn btn-primary\" onClick  = {() => editBtn(workout)}> Update</button>\n                            </div>\n                            <div className = \"col-md-2\">\n                                <button className = \"btn btn-success\" onClick  = {() => editBtn(workout)}> Add new</button>\n                            </div>\n                        </div>\n                    </div>\n                )\n                })}\n            </div> \n    )\n}\n\nWorkoutList.propTypes = {\n    // workouts: []\n}\n\nexport default WorkoutList\n\n"]},"metadata":{},"sourceType":"module"}